{"pages":[{"title":"关于我","text":"分站内容可能或出现渲染错误或内容过时等问题，请以主站为准！分站禁止评论，评论请前往主站！ 自我简介 欢迎来到我的博客, 我是 HCLonely , 一个js萌新, 一切js知识全靠自学, 并不会特别高大上的代码。 学习js只是为了自己日常使用, 代码很乱, 大佬勿喷。 更多介绍 昵称: HCLonely 性别: ♂ 爱好: JavaScript, 动漫，游戏，小说 邮箱: h1606051253@gmail.com 爱玩的游戏: Ori and the Blind Forest… 喜欢的动漫: 太多了… 喜欢的电影: 漫威系列 喜欢逛的网站: 哔哩哔哩, 其乐社区, GitHub …","link":"/about/index.html"}],"posts":[{"title":"Aria2 WebUI界面搭建","text":"分站内容可能或出现渲染错误或内容过时等问题，请以主站为准！分站禁止评论，评论请前往主站！Aria2是没有图形界面的，这里介绍几款WebUI界面。 WebUI-Aria2 使用方法 运行Aria2并开启RPC模式(配置文件中开启) 打开Demo网址或自己搭建的网址 点击“设置”→“链接设置”配置好Aria2 RPC 主机和端口并保存 右上角提示“通过 RPC 连接到 Aria2 成功！”就可以了 搭建到本地或服务器 下载源码 GitHub官方下载 备用下载 将下载的压缩文件里的docs文件夹解压到本地或服务器 搭建到本地的话直接浏览器打开docs文件夹里的index.html即可 搭建到服务器的话根据你解压的目录打开相应的网址即可 AriaNg 使用方法 运行Aria2并开启RPC模式(配置文件中开启) 打开Demo网址或自己搭建的网址 点击“AriaNg 设置”→“RPC(******:6800)”配置好Aria2 RPC 主机和端口并保存 右上角提示“localhost:6800连接成功”就可以了 搭建到本地或服务器 下载releases（本地搭建建议下载&quot;AllInOne&quot;版本） GitHub官方下载 备用下载1 备用下载2(AllInOne) 将下载的压缩文件解压到本地或服务器 搭建到本地的话直接浏览器打开&quot;index.html&quot;即可 搭建到服务器的话根据你解压的目录打开相应的网址即可 YAAW 使用方法 运行Aria2并开启RPC模式(配置文件中开启) 打开Demo网址或自己搭建的网址； 点击右上角“?”配置好Aria2 RPC 主机和端口并保存（不支持RPC密钥） 提示“Saved!”就可以了 搭建到本地或服务器 下载源码 GitHub官方下载 备用下载 将下载的压缩文件解压到本地或服务器 搭建到本地的话直接浏览器打开&quot;index.html&quot;即可 搭建到服务器的话根据你解压的目录打开相应的网址即可 Photon-WebUI 使用方法 运行Aria2并开启RPC模式(配置文件中开启) 打开Demo网址或自己搭建的网址 点击“设置”配置好Aria2 RPC 主机和端口 状态显示“已连接”就可以了 搭建到本地或服务器 下载源码 GitHub官方下载 备用下载 将下载的压缩文件里的”docs”文件夹解压到本地或服务器 搭建到本地的话直接浏览器打开”docs”文件夹里的”index.html”即可 搭建到服务器的话根据你解压的目录打开相应的网址即可","link":"/posts/4b4a0e66/"},{"title":"Chrome插件推荐","text":"分站内容可能或出现渲染错误或内容过时等问题，请以主站为准！分站禁止评论，评论请前往主站！这里推荐一些好用的谷歌浏览器(Chrome)插件 AdBlock — 最佳广告拦截工具 在YouTube、Facebook、Twitch和其他你喜爱的网站上拦截广告和弹窗。 AdBlock 是最好的广告拦截工具，拥有超过 6000 万用户，也是最受欢迎的 Chrome 扩展程序之一，下载量超过 3.5 亿次！ 功能特色： ☆ 拦截 YouTube、Facebook、Twitch 和所有您喜爱的网站上的弹出窗口、广告和恼人的横幅广告（就连视频广告也可以移除！） ☆ 拦截第三方跟踪代码并保护您的隐私 ☆ 拦截带有恶意软件、诈骗内容和加密货币挖矿代码的恶意广告，让您安全浏览 ☆ 缩短页面加载时间，享受更快的网络 ☆ 通过滤镜、白名单、深色模式和其他丰富多彩的主题自定义您的体验 ☆ AdBlock 团队提供快速、友好的支持，以及强大的帮助中心，使您能够独立排除故障 安装链接 Tampermonkey Tampermonkey 是一款免费的浏览器扩展和最为流行的用户脚本管理器，它适用于 Chrome, Microsoft Edge, Safari, Opera Next, 和 Firefox。 安装链接 扩展管理器（Extension Manager） 可以在实验功能(chrome://flags/)中开启Extensions Toolbar Menu Stylus Stylus 是一个调整网页外观的用户样式管理器。它可让您轻松地为许多热门网站网站安装主题和皮肤。 安装链接 Checker Plus for Gmail™ 无需打开 Gmail 或 Inbox，即可收到桌面邮件通知，方便地查看、收听或删除邮件，并且支持多账户。 和同类扩展程序相比，优势在于: 更多特性和选项！ 更优秀的客户支持服务！我会根据你们的建议增加新特性。 更实时的更新！可参见下方的版本更新记录。 最快捷、简便的方式来管理多个电子邮件帐户 更安全 - 权限要求更少，相比其他扩展。 高评分 - 谷歌应用商店中评分最高的扩展程序之一！太赞了，感谢评分的各位用户！ 特性： [新增]采用Gmail聊天提醒中的联系人呈现方式，让您可以选择显示他们的照片或者为他们添加自定义头像 [新增]语音提醒:当收到新邮件而您正收看电影或者忙于烹制晚餐时，您可以选择让电脑大声朗读邮件，可以包括发件人、邮件标题、甚至邮件正文。例如:“Jason发来邮件”，或者&quot;Jason说，到我家来吃饭吧&quot;。这项功能也有益于那些视力障碍者。 [新增]扩展程序可以根据您的设置监测:所有新邮件、收件箱中的新邮件、或者有特定标签的新邮件 [新增]您可以让扩展程序即使在Chrome关闭时依旧在后台运行 [新增]在弹出窗口中对邮件进行缩放以显示大尺寸图片 您无需打开Gmail网页，可直接在弹出窗口中阅读、存档、标记已读或删除邮件（此选项也可关闭，程序将直接引导您前往Gmail网页进行相关操作） 当收到新邮件时，获得桌面音效或语音通知。（您甚至可以录制自己的语音通知） 支持Gmail和Google企业应用服务帐户的多重登录功能 您可以选择使用Gmail打开所有mailto链接，取代常用的邮件客户端。 扩展图标有10多种式样供您选择！ 您可以为扩展程序添加新的语音引擎来朗读邮件 最重要的是，您拥有了最快的方式来&quot;清除&quot;收件箱中的未读邮件！ 安装链接 EditThisCookie EditThisCookie是一个cookie管理器。您可以添加，删除，编辑，搜索，锁定和屏蔽cookies！ 特性： ★ 编辑cookies ★ 删除cookies ★ 添加一个新的cookie ★ 创建cookies ★ 搜索cookies ★ 保护cookies (只读cookies) ★ 拦截cookies (cookie 过滤器) ★ 导出cookies为JSON, Netscape cookie 文档 (非常适合wget及curl), Perl::LPW ★ 导入JSON格式cookies ★ 限制任何cookie的最大有效期 ★ 改进性能，移除旧的cookies ★ 导入cookies.txt 安装链接 Enhanced GitHub 显示仓库大小，每个文件的大小，下载链接和复制文件内容的选项 特征： 显示仓库大小 显示每个活动分支中的每个文件大小（不适用于文件夹/符号链接） 显示每个文件的下载链接（不适用于文件夹/符号链接） 将文件内容直接复制到剪贴板（对于markdown文件不起作用） 在查看文件内容的同时下载文件 安装链接 FeHelper.JSON JSON自动格式化、手动格式化，支持排序、解码、下载等，更多功能可在配置页动态安装！ 安装链接 Git History Browser Extension 向github添加按钮以查看文件历史记录 安装链接 HitUP - Find Top Things 在新标签页中显示重要内容，例如GitHub仓库趋势等 安装链接 Octotree 特征： 易于浏览的代码树，就像在IDE中一样 使用pjax快速浏览文件 显示拉取请求更改 支持私有仓库 专业功能（要求登录帐户和/或在https://www.octotree.io/上订阅）: 增强的代码审查功能 多种语法主题支持 查看整个拉取请求已更改的文件 拉取请求，仓库，发布和文件书签 仓库缓存（提高大型仓库的性能） 安装链接 RSSHub Radar RSSHub Radar 是 RSSHub 的衍生项目，她可以帮助你快速发现和订阅当前网站的 RSS 和 RSSHub 安装链接 Standardized Screenshot 标准化的屏幕截图 安装链接 新浪微博图床 简单好用的新浪微博图床,支持选择/拖拽/粘贴上传图片,并生成图片地址,HTML,UBB和Markdown等格式,支持浏览和删除历史记录 特征： 支持点选/拖拽/本地粘贴3种方式上传图片至新浪微博图床 支持批量上传 支持生成图片地址,HTML,UBB和Markdown四种格式 支持本地保存和删除上传历史 支持在常用在线markdown编辑器中使用ctrl+v粘贴图片，图片自动上传到微博图床。(目前已支持github，csdn及zybuluo的markdown在线编辑器) 支持https模式 支持自定义Chrome菜单栏图标 安装链接 Aria2 for Chrome Aria2 Web UI 支持手动添加和自动拦截下载任务到Aria2。（分叉自YAAW） 安装链接 AutoJoin for SteamGifts Steamgifts.com自动加入抽奖和网站增强工具 功能特色： 自动加入抽奖 无限滚动 在首页添加加入和退出抽奖按钮 改善隐藏抽奖 隐藏所有DLC抽奖 夜间主题 安装链接 Steam Database 在Steam社区和商店中添加Steam数据库链接和新功能 特征： 在Steam站点之间添加到SteamDB的链接 在商店页面上显示史低价格 在游戏页面上显示在线统计 库存中的快速出售按钮 在商店跳过年龄检查 自动接受市场交易 删除链接过滤器链接 在steamdb.info上突出显示您拥有的游戏，DLC和软件包 其他许多较小的调整和功能 安装链接","link":"/posts/72a59031/"},{"title":"Hexo Steam游戏库页面插件","text":"分站内容可能或出现渲染错误或内容过时等问题，请以主站为准！分站禁止评论，评论请前往主站！ 介绍 为Hexo添加Steam游戏库页面 安装 $ npm install hexo-steam-games --save 配置 将下面的配置写入站点的配置文件 _config.yml 里(不是主题的配置文件). steam: enable: true steamId: &apos;*****&apos; #steam 64位Id path: title: Steam游戏库 quote: &apos;+1+1+1+1+1&apos; tab: recent length: 1000 imgUrl: &apos;*****&apos; proxy: host: port: enable: 是否启用 steamId: steam 64位Id(需要放在引号里面，不然会有BUG), 需要将steam库设置为公开！ path: 番剧页面路径，默认steamgames/index.html title: 该页面的标题 quote: 写在页面开头的一段话,支持html语法 tab: all或recent, all: 所有游戏, recent: 最近游玩的游戏 length: 要显示游戏的数量，游戏太多的话可以限制一下 imgUrl: 图片链接，在quote下面放一张图片，图片链接到Steam个人资料，可留空 proxy: 如果无法访问steam社区的话请使用代理 host: 代理ip或域名 port: 代理端口 使用 在hexo generate或hexo deploy之前使用hexo steam -u命令更新steam游戏库数据！ 删除游戏库数据指令:hexo steam -d 手动获取游戏库数据 如果hexo steam -u命令一直获取游戏库数据失败，可以用以下方法手动获取游戏库数据： 浏览器打开https://steamcommunity.com/id/{steamId}/games?tab={tab}, {steamId}和{tab}分别替换为上面配置中提到的steamId和tab 网页加载完成后，打开浏览器控制台(按F12)，输入以下代码并回车： let script = jQuery(&apos;script[language=&quot;javascript&quot;]&apos;);var games = [];for (let i = 0; i &lt; script.length; i++) { if (script.eq(i).html().includes(&quot;rgGames&quot;)) { let rgGames = script.eq(i).html().match(/var.*?rgGames.*?=.*?(\\[[\\w\\W]*?\\}\\}\\]);/); if (rgGames) { games = JSON.parse(rgGames[1]); break; } }}document.write(JSON.stringify(games)) 将生成的内容复制到博客根目录/node_modules/hexo-steam-games/data/games.json文件内，如果没有对应的文件或目录，请自行创建 示例 示例页面 Lisense Apache Licence 2.0","link":"/posts/672d4d3b/"},{"title":"Hexo哔哩哔哩番剧页面插件","text":"分站内容可能或出现渲染错误或内容过时等问题，请以主站为准！分站禁止评论，评论请前往主站！ 介绍 为Hexo添加哔哩哔哩番剧页面，参考了hexo-douban的部分代码 安装 $ npm install hexo-bilibili-bangumi --save 配置 将下面的配置写入站点的配置文件 _config.yml 里(不是主题的配置文件). bangumi: enable: true path: vmid: title: &apos;追番列表&apos; quote: &apos;生命不息，追番不止！&apos; show: 1 loading: &apos;/img/bangumi-loading.gif&apos; enable: 是否启用 path: 番剧页面路径，默认bangumis/index.html vmid: 哔哩哔哩番剧页面的 vmid(uid),如何获取？ title: 该页面的标题 quote: 写在页面开头的一段话,支持html语法 show: 初始显示页面：0: 想看, 1: 在看, 2: 看过，默认为1 loading: 图片加载完成前的loading图片 使用 在hexo generate或hexo deploy之前使用hexo bangumi -u命令更新番剧数据！ 删除数据命令:hexo bangumi -d 获取uid 登录哔哩哔哩后前往https://space.bilibili.com/页面，网址最后的一串数字就是 uid 需要将追番列表设置为公开！ 示例 示例页面 Lisense Apache Licence 2.0","link":"/posts/8422e92e/"},{"title":"Hexo博客DIY","text":"分站内容可能或出现渲染错误或内容过时等问题，请以主站为准！分站禁止评论，评论请前往主站！ 注意，本文方法主要用于Butterfly主题，其他主题需要有一定的前端知识！！！DIY前请先备份！！！ Pixiv日榜 Butterfly主题 在themes\\Butterfly\\layout\\includes\\widget文件夹新建card_pixiv.pug文件，文件内容如下： .card-widget.card-pixiv .card-content .item-headline i.fa.fa-image(aria-hidden=&quot;true&quot;) span= _p(&apos;aside.card_pixiv&apos;) iframe(src=&quot;https://cloud.mokeyjay.com/pixiv&quot; frameborder=&quot;0&quot; style=&quot;width:99%;height:380px;margin:0;&quot;) https://cloud.mokeyjay.com/pixiv使用的是超能小紫提供的服务，也可以自行搭建，搭建方式请看这里 编辑themes\\Butterfly\\layout\\includes\\widget\\index.pug文件，在你想要显示的位置插入以下代码： if theme.aside.card_pixiv include ./card_pixiv.pug 编辑butterfly.yml文件，在card_webinfo下面添加一行card_pixiv: true 编辑themes\\Butterfly\\languages\\zh-CN.yml文件(请根据你的网站语言选择)，找到card_announcement: 公告, 在下面添加一行card_pixiv: Pixiv日榜Top50(后面的文本可自定义) 如果不想显示，直接把butterfly.yml文件的card_pixiv: true改为card_pixiv: false即可 其他主题 将以下内容插入到需要显示的地方： &lt;iframe src=&quot;https://cloud.mokeyjay.com/pixiv&quot; frameborder=&quot;0&quot; style=&quot;width:100%;height:380px;margin:0;&quot;&gt;&lt;/iframe&gt; 访客地图 Butterfly主题 前往clustrmaps网站注册一个帐号 找到Free Tools下面的Website Widget, 点击Get Map Widget 输入你的博客网址，点击Next 根据你自己的喜好选择样式Map widget或Globe Widget 找到如下代码，记住src(******的部分): &lt;script type=&quot;text/javascript&quot; id=&quot;clstr_globe&quot; src=&quot;**********************&quot;&gt; 在themes\\Butterfly\\layout\\includes\\widget文件夹新建card_map.pug文件，文件内容如下： .card-widget.card-map .card-content .item-headline i.fas.fa-globe-asia(aria-hidden=&quot;true&quot;) span= _p(&apos;aside.card_map&apos;) //- 下面这行适用于3D地图(Globe Widget) script#clstr_globe(type=&quot;text/javascript&quot; defer=&quot;defer&quot; src=&quot;******************&quot;) //- 下面这行适用于平面地图(Map Widget) script#clustrmaps(type=&quot;text/javascript&quot; defer=&quot;defer&quot; src=&quot;******************&quot;) ******部分填写上面的src, 3D地图和平面地图任选一个，不用的把代码删掉 编辑themes\\Butterfly\\layout\\includes\\widget\\index.pug文件，在你想要显示的位置插入以下代码： if theme.aside.card_map include ./card_map.pug 编辑butterfly.yml文件，在card_webinfo下面添加一行card_map: true 编辑themes\\Butterfly\\languages\\zh-CN.yml文件(请根据你的网站语言选择)，找到card_announcement: 公告, 在下面添加一行card_map: 访客地图(后面的文本可自定义) 如果不想显示，直接把butterfly.yml文件的card_map: true改为card_map: false即可 其他主题 将上面第5步中的代码插入到需要显示的地方。 文章日历 本方法只适用于Butterfly主题！ 安装hexo-generator-calendar插件 npm install --save git://github.com/howiefh/hexo-generator-calendar.git 下载calendar.js和languages.js文件，保存到themes\\Butterfly\\source\\js目录 calendar.js languages.js 编辑calendar.js文件，在文件最后}(jQuery));之前添加: $(document).ready(function () { $(&apos;#calendar&apos;).aCalendar(&apos;zh-CN&apos;);//&apos;zh-CN&apos;请根据自己博客的语言选择}); 编辑butterfly.yml文件, 以下两个你butterfly.yml文件里有哪个就用那个，不要都用！ 在CDN_USE-&gt;js下面添加如下内容： - /js/calendar.js- /js/languages.js 在inject-&gt;bottom下面添加如下内容： - &lt;script src=&quot;/js/calendar.js&quot;&gt;&lt;/script&gt;- &lt;script src=&quot;/js/languages.js&quot;&gt;&lt;/script&gt; 下载calendar.styl文件，保存到themes\\Butterfly\\source\\css\\_layout目录 在themes\\Butterfly\\layout\\includes\\widget文件夹新建card_calendar.pug文件，文件内容如下： .card-widget.card-calendar .card-content .item-headline i.far.fa-calendar-alt(aria-hidden=&quot;true&quot;) span= _p(&apos;aside.card_calendar&apos;) div.widget-wrap div#calendar.widget 编辑themes\\Butterfly\\layout\\includes\\widget\\index.pug文件，在你想要显示的位置插入以下代码： if theme.aside.card_calendar include ./card_calendar.pug 编辑butterfly.yml文件，在card_webinfo下面添加一行card_calendar: true 编辑themes\\Butterfly\\languages\\zh-CN.yml文件(请根据你的网站语言选择)，找到card_announcement: 公告, 在下面添加一行card_calendar: 文章日历(后面的文本可自定义) 如果不想显示，直接把butterfly.yml文件的card_calendar: true改为card_calendar: false即可 投票系统 Butterfly主题 前往widgetpack注册账号 登陆后在点击左侧侧边栏Rating-&gt;Install, 你会看到如下代码，记住id: &lt;div id=&quot;wpac-rating&quot;&gt;&lt;/div&gt;&lt;script type=&quot;text/javascript&quot;&gt;wpac_init = window.wpac_init || [];wpac_init.push({widget: &apos;Rating&apos;, id: *****});(function() { if (&apos;WIDGETPACK_LOADED&apos; in window) return; WIDGETPACK_LOADED = true; var mc = document.createElement(&apos;script&apos;); mc.type = &apos;text/javascript&apos;; mc.async = true; mc.src = &apos;https://embed.widgetpack.com/widget.js&apos;; var s = document.getElementsByTagName(&apos;script&apos;)[0]; s.parentNode.insertBefore(mc, s.nextSibling);})();&lt;/script&gt;&lt;a href=&quot;https://widgetpack.com&quot; class=&quot;wpac-cr&quot;&gt;Star Rating WIDGET PACK&lt;/a&gt; 在博客根目录/themes/Butterfly/layout/includes/post/目录内新建文件rate.pug, 内容如下： #wpac-ratingscript. wpac_init = window.wpac_init || []; wpac_init.push({widget: &apos;Rating&apos;, id: #{theme.rate.id}}); (function() { if (&apos;WIDGETPACK_LOADED&apos; in window) return; WIDGETPACK_LOADED = true; var mc = document.createElement(&apos;script&apos;); mc.type = &apos;text/javascript&apos;; mc.async = true; mc.src = &apos;//embed.widgetpack.com/widget.js&apos;; var s = document.getElementsByTagName(&apos;script&apos;)[0]; s.parentNode.insertBefore(mc, s.nextSibling); })(); 编辑博客根目录/themes/Butterfly/layout/post.pug文件，在!=partial(&apos;includes/post/reward&apos;, {}, {cache:theme.fragment_cache})下方添加： if theme.rate.enable include includes/post/rate.pug 注意缩进if与上面的if对齐 在Butterfly.yml文件内添加： rate: enable: true id: #上面记住的id 其他主题 将第2步生成的代码插入到需要显示的位置。 加载中动画 Butterfly主题 更新到dev分支最新版即可。 其他主题 将以下内容添加到&lt;head&gt;&lt;/head&gt;标签内： &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/gh/HCLonely/images@master/others/loading.min.css&quot;&gt; 将以下内容添加到&lt;body&gt;标签后面： &lt;div id=&quot;loading-box&quot;&gt; &lt;div class=&quot;loading-left-bg&quot;&gt;&lt;/div&gt; &lt;div class=&quot;loading-right-bg&quot;&gt;&lt;/div&gt; &lt;div class=&quot;spinner-box&quot;&gt; &lt;div class=&quot;configure-border-1&quot;&gt; &lt;div class=&quot;configure-core&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;configure-border-2&quot;&gt; &lt;div class=&quot;configure-core&quot;&gt;&lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;loading-word&quot;&gt;加载中...&lt;/div&gt; &lt;/div&gt;&lt;/div&gt; 将以下内容添加到&lt;/body&gt;标签前面： &lt;script&gt; var endLoading = function () { document.body.style.overflow = &apos;auto&apos;; document.getElementById(&apos;loading-box&apos;).classList.add(&quot;loaded&quot;); } window.addEventListener(&apos;load&apos;,endLoading);&lt;/script&gt; 页脚跳动的♥ Butterfly主题 编辑博客根目录/themes/Butterfly/layout/includes/footer.pug文件，将&amp;copy;${theme.since} - ${nowYear} By ${config.author}改为&amp;copy;${theme.since} - ${nowYear + &apos; &apos;} &lt;i id=&quot;heartbeat&quot; class=&quot;fa fas fa-heartbeat&quot;&gt;&lt;/i&gt; ${config.author}, 将&amp;copy;${nowYear} By ${config.author}改为&amp;copy;${nowYear + &apos; &apos;} &lt;i id=&quot;heartbeat&quot; class=&quot;fa fas fa-heartbeat&quot;&gt;&lt;/i&gt; ${config.author} 将以下内容添加到&lt;head&gt;&lt;/head&gt;标签内： &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/gh/HCLonely/images@master/others/heartbeat.min.css&quot;&gt; 其他主题 将&lt;i id=&quot;heartbeat&quot; class=&quot;fa fas fa-heartbeat&quot;&gt;&lt;/i&gt;添加到需要显示的位置 同上第2步 页脚显示网站运行时间 Butterfly主题 编辑博客根目录/themes/Butterfly/layout/includes/footer.pug文件，在最后span=theme.ICP.text下一行添加以下内容： #running-time script. setInterval(()=&gt;{let create_time=Math.round(new Date(Date.UTC(2020,01,03,0,0,0)).getTime()/1000);let timestamp=Math.round((new Date().getTime()+8*60*60*1000)/1000);let second=timestamp-create_time;let time=new Array(0,0,0,0,0);if(second&gt;=365*24*3600){time[0]=parseInt(second/(365*24*3600));second%=365*24*3600;}if(second&gt;=24*3600){time[1]=parseInt(second/(24*3600));second%=24*3600;}if(second&gt;=3600){time[2]=parseInt(second/3600);second%=3600;}if(second&gt;=60){time[3]=parseInt(second/60);second%=60;}if(second&gt;0){time[4]=second;}currentTimeHtml=&apos;本站已安全运行 &apos;+time[0]+&apos; 年 &apos;+time[1]+&apos; 天 &apos;+time[2]+&apos; 时 &apos;+time[3]+&apos; 分 &apos;+time[4]+&apos; 秒&apos;;document.getElementById(&quot;running-time&quot;).innerHTML=currentTimeHtml;},1000); 注意#running-time与上面的if theme.ICP.enable对齐！要将Date.UTC(2020,01,03,0,0,0)改为你网站的起始时间！ 其他主题 将以下内容添加到需要显示的位置 &lt;div id=&quot;running-time&quot;&gt;&lt;/div&gt;&lt;script&gt;setInterval(()=&gt;{let create_time=Math.round(new Date(Date.UTC(2020,01,03,0,0,0)).getTime()/1000);let timestamp=Math.round((new Date().getTime()+8*60*60*1000)/1000);let second=timestamp-create_time;let time=new Array(0,0,0,0,0);if(second&gt;=365*24*3600){time[0]=parseInt(second/(365*24*3600));second%=365*24*3600;}if(second&gt;=24*3600){time[1]=parseInt(second/(24*3600));second%=24*3600;}if(second&gt;=3600){time[2]=parseInt(second/3600);second%=3600;}if(second&gt;=60){time[3]=parseInt(second/60);second%=60;}if(second&gt;0){time[4]=second;}currentTimeHtml=&apos;本站已安全运行 &apos;+time[0]+&apos; 年 &apos;+time[1]+&apos; 天 &apos;+time[2]+&apos; 时 &apos;+time[3]+&apos; 分 &apos;+time[4]+&apos; 秒&apos;;document.getElementById(&quot;running-time&quot;).innerHTML=currentTimeHtml;},1000);&lt;/script&gt; 要将Date.UTC(2020,01,03,0,0,0)改为你网站的起始时间！ 双评论系统 此方法只适用于Butterfly主题！ 这里以同时使用Valine和Gitalk, 默认使用Valine为例。 请确认Valine和Gitalk已开启并正确配置。 修改themes/Butterfly/layout/includes/comments/index.pug文件，将所有的else if改为if, 并在span= &apos; &apos; + _p(&apos;comment&apos;)下面添加： a#switch-comment(href=&quot;javascript:void(0);&quot; title=&quot;切换为Gitalk&quot; target=&quot;_self&quot;) i.fa.fas.fa-toggle-off(aria-hidden=&quot;true&quot;) 隐藏一个评论，保留一个默认评论 隐藏valine: 修改themes/Butterfly/layout/includes/comments/valine.pug文件，在#vcomment.vcomment后面添加(style=‘display:none;’) 隐藏gitalk: 修改themes/Butterfly/layout/includes/comments/gitalk.pug文件，在#vcomment.vcomment后面添加(style=‘display:none;’) 隐藏其他评论系统方法与上面类似 在themes/Butterfly/source/js/third-party/目录新建switch_comments.js文件，内容如下： function switchComment () { const title = $(&apos;#switch-comment&apos;).attr(&apos;title&apos;) === &apos;切换为Gitalk&apos; ? &apos;切换为Valine&apos; : &apos;切换为Gitalk&apos; const i = $(&apos;#switch-comment&gt;i&apos;) if ($(&apos;#gitalk-container&apos;).css(&apos;display&apos;) === &apos;none&apos;) { $(&apos;#vcomment&apos;).slideUp(&apos;normal&apos;, () =&gt; { $(&apos;#gitalk-container&apos;).slideDown(&apos;normal&apos;, () =&gt; { $(&apos;#switch-comment&apos;).attr(&apos;title&apos;, title) i.hasClass(&apos;fa-toggle-off&apos;) ? i.removeClass(&apos;fa-toggle-off&apos;).addClass(&apos;fa-toggle-on&apos;) : i.removeClass(&apos;fa-toggle-on&apos;).addClass(&apos;fa-toggle-off&apos;) }) }) } else { $(&apos;#gitalk-container&apos;).slideUp(&apos;normal&apos;, () =&gt; { $(&apos;#vcomment&apos;).slideDown(&apos;normal&apos;, () =&gt; { $(&apos;#switch-comment&apos;).attr(&apos;title&apos;, title) i.hasClass(&apos;fa-toggle-off&apos;) ? i.removeClass(&apos;fa-toggle-off&apos;).addClass(&apos;fa-toggle-on&apos;) : i.removeClass(&apos;fa-toggle-on&apos;).addClass(&apos;fa-toggle-off&apos;) }) }) }} 编辑butterfly.yml文件, 以下两个你butterfly.yml文件里有哪个就用那个，不要都用！ 在CDN_USE-&gt;js下面添加如下内容： - /js/third-party/switch_comments.js 在inject-&gt;bottom下面添加如下内容： - &lt;script src=&quot;/js/third-party/switch_comments.js&quot;&gt;&lt;/script&gt; 如果你使用的其他评论系统注意替换上面的切换为Gitalk, 切换为Valine, #gitalk-container, #vcomment切换图标使用的fontawesome, 兼容V4和V5, 如果你是用的其他图标库，请替换fa-toggle-on和fa-toggle-off 随机文章跳转 在博客根目录/scripts(没有请自行创建)下新建random.js文件，内容如下： hexo.extend.generator.register(&apos;random&apos;, function (locals) { const config = hexo.config.random || {} const posts = [] for (const post of locals.posts.data) { if (post.random !== false) posts.push(post.path) } return { path: config.path || &apos;random/index.html&apos;, data: `&lt;html&gt;&lt;head&gt;&lt;script&gt;var posts=${JSON.stringify(posts)};window.open(&apos;/&apos;+posts[Math.floor(Math.random() * posts.length)],&quot;_self&quot;)&lt;/script&gt;&lt;/head&gt;&lt;/html&gt;` }}) 打开/random/就会随机跳转一篇文章 可选配置 可以在_config.yml添加以下配置： random: path: # 随机链接路径，默认&quot;random/index.html&quot; 如果不想随机跳转到某篇文章，只需在这篇文章Front-matter添加random: false 文章统计图表 从matery主题上看到了文章发布统计图、标签统计图和文章分类统计图，觉得挺好看，就扒下来做了个插件。因为使用Tag会导致文章获取不全，所以本插件直接使用html标签渲染，而不是使用Tag。 由于使用了cheerio模块，如果你使用了html压缩插件，可能会出现压缩报错，暂时无解。 安装 npm install hexo-charts -S 使用 注意！下面的标签可以放到post和不含type的page的md文件中，含有type的page请自行修改相应的模板文件，这个就不要来问我了，因为每个人用的主题可能都不一样，建议去问主题的作者。 文章发布统计图 &lt;div id=&quot;#posts-chart&quot;&gt;&lt;/div&gt; 标签统计图 &lt;!-- &quot;data-length&quot;为显示标签个数(从多到少)，默认为10 --&gt;&lt;div id=&quot;#tags-chart&quot; data-length=&quot;10&quot;&gt;&lt;/div&gt; 文章分类统计图 &lt;div id=&quot;#categories-chart&quot;&gt;&lt;/div&gt; 示例 Butterfly主题将图表添加到归档、分类、标签页面 将文章发布统计图添加到归档页面 在主题目录/Butterfly/layout/archive.pug文件的#archive下面添加一行#posts-chart, 新添加的比上一行多缩进两个空格。 block content include ./includes/mixins/article-sort.pug #archive #posts-chart 将标签统计图和分类统计图分别添加到标签和分类页面 编辑主题目录/Butterfly/layout/page.pug文件，在.tag-cloud下面添加一行#tags-chart，在.category-content下面添加一行#categories-chart，新添加的比上一行多缩进两个空格。 block content if page.type === &apos;tags&apos; .tag-cloud #tags-chart else if page.type === &apos;categories&apos; .category-content #categories-chart 文章二维码(仅Butterfly主题) 安装hexo-helper-qrcode插件: npm install hexo-helper-qrcode -S 编辑主题目录/Butterfly/layout/includes/header/post-info.pug, 在文件最后添加以下内容： span.post-qrcode span.post-meta__separator | i.fa.fa-qrcode.post-meta__icon.fa-fw(aria-hidden=&quot;true&quot;) a(href=&quot;javasvript:;&quot; onmouseover=&apos;document.getElementById(&quot;post-qrcode&quot;).style.display=&quot;block&quot;&apos; onmouseout=&apos;document.getElementById(&quot;post-qrcode&quot;).style.display=&quot;none&quot;&apos;)=&apos;二维码&apos; div#post-qrcode.post-qrcode-img img#post-img(src=qrcode(page.permalink)) 注意span.post-qrcode要与上面的span.post-meta-commentcount对齐！ valine评论添加博主等标签(仅Butterfly主题) 本教程仅适用于Butterfly主题，其他主题可以根据本教程和这篇文章自行修改！ 下载valine.pug文件，替换themes/Butterfly/layout/includes/comments/valine.pug 编辑butterfly.yml文件，找到valine配置，添加以下配置项: master: # md5加密后的博主邮箱 - f8c7c3961aea2c203160e90cd3b3a26afriends: # md5加密后的小伙伴邮箱 - 5c2105bbfe6rfc02a6f6ae26dad3819c - a0adabb31677df92a2405fb18a02ee4dmetaPlaceholder: # 输入框的背景文字 nick: 昵称/QQ号(必填) mail: 邮箱(必填) link: 网址(https://)tagMeta: # 标签要显示的文字,默认&apos;博主,小伙伴,访客&apos;verify: false # 评论时是否需要验证，需jQuery支持 分割线以上部分基于Butterfly主题3.0.0之前的版本修改！3.0.0版本之后的部分内容可能需要调整！","link":"/posts/57bd67ce/"},{"title":"IP签名档制作","text":"分站内容可能或出现渲染错误或内容过时等问题，请以主站为准！分站禁止评论，评论请前往主站！本篇文章教大家如何生成像下图一样的IP签名档。 下载源码 GitHub官方下载 备用下载 将下载的源码解压到你的网站目录里（建议新建一个目录，不要放在根目录） 访问http://域名/目录/就可以了 可以用以下代码插入到网页 &lt;img src=&quot;http://域名/目录/&quot; /&gt; 也可以用以下短代码插入到论坛 [img]http://域名/目录/[/img] 如果想在图片上添加一句个性签名，请使用 http://域名/目录/?s=个性签名Base64编码，例如：https://xhboke.com/news/?s=SGVsbG8gV29ybGQh 说明 作者博客： https://xhboke.com//index.php GitHub源码： https://github.com/xhboke/IP","link":"/posts/b48b8704/"},{"title":"Key站自动任务脚本","text":"分站内容可能或出现渲染错误或内容过时等问题，请以主站为准！分站禁止评论，评论请前往主站！ 安装 安装 Tampermonkey 安装 auto-task 脚本 首次使用建议先 设置 如果弹出 一个用户脚本试图访问跨源资源, 请点击 总是允许全部域名 如果脚本出现BUG, 请先检查脚本是否为最新版, 如果不是请更新到最新版。 如果更新脚本后出现BUG, 可以先前往 https://cdn.jsdelivr.net/gh/HCLonely/auto-task@version/auto-task.user.js(把version改为上一个版本的版本号, 例: https://cdn.jsdelivr.net/gh/HCLonely/auto-task@2.2.6/auto-task.user.js) 安装之前的版本(仅支持2.2.5之后的版本), 然后反馈BUG, 等待修复。 每个按钮功能 Fuck, Join, Verify, Remove 按钮功能请前往设置页面查看 Showlogs, Hidelogs 按钮: 显示/隐藏右下角日志 右下角的清理缓存功能: 脚本每次做完任务后会保存任务信息以便使用Remove功能, 如果提示所有任务已完成但没有做任何任务可以尝试清理缓存, 然后刷新一下再做任务, 清理缓存后会导致之前做过的任务无法Remove 常见问题解决办法 giveaway.su网站0000-0000-0000问题 解决办法：用脚本做完任务后关闭脚本管理器和广告屏蔽插件，然后刷新网页手动验证任务 givekey.su网站人机验证问题 解决办法：每次点击Fuck按钮前都要手动完成人机验证 givekey.su网站wss连接出错 解决办法：参考#8 设置页面打不开 解决办法：CODING 服务器抽风了，挂代理或等一段时间 适用网站 giveaway.su marvelousga dupedornot grabfreegame bananagiveaway gamecode.win gamehag prys indiedb givekey(需要将语言设置为&quot;English&quot;或&quot;Русский&quot;) takekey freegamelottery gleam.io spoune 功能 自动完成Steam任务： 加组 加愿望单 关注游戏 关注鉴赏家 关注发行商（仅限giveaway.su） 关注开发商（仅限giveaway.su） 点赞社区公告（仅限giveaway.su） 自动退出Steam任务： 退组 移除愿望单 取关游戏 取关鉴赏家 取关发行商（仅限giveaway.su） 取关开发商（仅限giveaway.su） 自动访问链接 验证任务 检测是否登录（如果需要登录） 检测是否剩余key 没完成的任务或脚本无法完成的任务自动打开任务页面以便手动完成 自动检测更新 导出导入设置 以上功能默认情况下并不是全部开启的，详细设置请前往设置页面，设置完别忘了保存！！！ 首次使用2.0+版本建议先设置！ 反馈方式 在GitHub提交 前往其乐（原蒸汽动力）论坛提交 本帖下方评论 更新公告 https://userjs.hclonely.com/announcement.html 新版本测试时间较短，可能会有BUG，欢迎前来反馈，之前的版本已留档（点此安装），不会再更新！","link":"/posts/777c60d5/"},{"title":"Linux ownCloud私有云搭建","text":"分站内容可能或出现渲染错误或内容过时等问题，请以主站为准！分站禁止评论，评论请前往主站！关于ownCloud   ownCloud是一个开源免费专业的私有云存储项目，它能帮你快速在个人电脑或服务器上架设一套专属的私有云文件同步网盘，可以像 百度云那样实现文件跨平台同步、共享、版本控制、团队协作等等。ownCloud 能让你将所有的文件掌握在自己的手中，只要你的设备性能和空间充足，那么用起来几乎没有任何限制。   ownCloud支持 Windows、Mac、Android、iOS、Linux 等平台，而且还提供了网页版和 WebDAV 形式访问，因此你可以在任何电脑、手机上都能轻松获取你的文件。   本篇文章主要介绍了如何在LNMP环境下搭建ownCloud. 需求环境(括号内为博主使用的环境，基于宝塔面板安装) 系统: CentOS Linux 7+(CentOS Linux 7.2.1511 64bit) web服务器: Nginx 1.16+(Nginx 1.16.1) 数据库: MySQL 5.5+(MySQL 5.5.62) PHP: 5.6&lt;PHP&lt;7.3(PHP 7.2) 额外PHP扩展(括号内为建议安装):acpu,redis,fileinfo(opcache,memcache,memcached) 安装ownCloud 安装dnf包(系统内已安装可跳过此步骤): yum install dnf 安装dnf config-manager命令(系统内已安装可跳过此步骤): dnf install &apos;dnf-command(config-manager)&apos; 添加新的ownCloud软件源: rpm --import https://download.owncloud.org/download/repositories/production/CentOS_7/repodata/repomd.xml.key 安装ownCloud-files: dnf config-manager --add-repo http://download.owncloud.org/download/repositories/production/CentOS_7/ce:stable.repodnf clean alldnf install owncloud-files 检查是否安装成功: 如果/var/www/html文件夹内有owncloud文件夹，说明安装成功。 修改根目录(可选) 直接复制owncloud文件夹到目标文件夹即可(要保留一份后面可能会用到) 添加网站 将网站根目录指向.../owncloud即可: server{ listen 80; server_name 你的服务器ip或域名; index index.php index.html index.htm default.php default.htm default.html; root .../owncloud/; #SSL-START SSL相关配置，请勿删除或修改下一行带注释的404规则 #error_page 404/404.html; #SSL-END #ERROR-PAGE-START 错误页配置，可以注释、删除或修改 #error_page 404 /404.html; #error_page 502 /502.html; #ERROR-PAGE-END #PHP-INFO-START PHP引用配置，可以注释或修改 include enable-php-72.conf; #PHP-INFO-END #REWRITE-START URL重写规则引用,修改后将导致面板设置的伪静态规则失效 include /www/server/panel/vhost/rewrite/your.conf; #REWRITE-END #禁止访问的文件或目录 location ~ ^/(\\.user.ini|\\.htaccess|\\.git|\\.svn|\\.project|LICENSE|README.md) { return 404; } #防盗链配置 location ~ .*\\.(gif|jpg|jpeg|png|bmp|swf)$ { expires 30d; error_log off; access_log /dev/null; } location ~ .*\\.(js|css)?$ { expires 12h; error_log off; access_log /dev/null; } access_log /www/wwwlogs/your.log; error_log /www/wwwlogs/your.error.log;} 创建数据库 创建数据库并记住数据库名,用户名,密码。 配置数据库及管理员帐号 访问你的网站(ip或域名)看到如下内容(报错请给根目录&quot;775&quot;或&quot;777&quot;权限): 输入管理员帐号密码(需要记住) 数据目录可不修改 数据库选择MySQL/MariaDB并输入数据库名、帐号、密码、主机名及端口号(默认localhost:3306) 填完上述内容后点击安装完成可看到如下内容: 输入之前输入的管理员帐号密码登录即可。 安全及设置警告 PHP 似乎没有设置好查询的系统环境变量。 用 getenv(“PATH”) 测试只返回一个空值。请检查 PHP 配置说明和服务器的 PHP 配置 安装文档 ↗，使用 PHP-FPM 时尤其注意。 找到/www/server/php/72/etc目录，编辑php-fpm.conf文件，找到如下内容(没有则添加如下内容) ;env[HOSTNAME] = $HOSTNAME;env[PATH] = /usr/local/bin:/usr/bin:/bin;env[TMP] = /tmp;env[TMPDIR] = /tmp;env[TEMP] = /tmp 去掉前面的’;&apos;并保存。 事务文件锁定应配置为使用基于内存的锁定，而不是默认的基于慢速数据库的锁定。有关详细信息，请参阅 文档 ↗。 编辑.../owncloud/config/目录下的config.php文件，添加如下内容(需安装前面提到的额外PHP扩展)： &apos;memcache.local&apos; =&gt; &apos;\\\\OC\\\\Memcache\\\\APCu&apos;,&apos;memcache.locking&apos; =&gt; &apos;\\\\OC\\\\Memcache\\\\Redis&apos;,&apos;redis&apos; =&gt; array ( &apos;host&apos; =&gt; &apos;localhost&apos;, &apos;port&apos; =&gt; 6379,), 保存即可。 我们建议启用系统 cron，任何其他 cron 方法可能对性能和可靠性有影响。 添加计划任务: 任务类型:Shell脚本 任务名称:随便取一个 执行周期:N分钟 15分 脚本内容:sudo -u www /www/server/php/72/bin/php -f .../owncloud/cron.php(&quot;…&quot;要根据自己的实际情况修改) 设置中计划任务改为Cron 您正在通过 HTTP 访问该站点，我们强烈建议您按照安全提示配置服务器强制使用 HTTPS。 给网站配置SSL证书，启用HTTPS即可。 HTTP 严格传输安全（Strict-Transport-Security）报头未配置到至少“15552000”秒。处于增强安全性考虑，我们推荐按照安全提示启用 HSTS。 编辑网站配置文件，添加如下代码: add_header Strict-Transport-Security &quot;max-age=63072000; includeSubdomains; preload&quot;; 你的数据目录和你的文件可能从互联网被访问到。.htaccess 文件不工作。我们强烈建议你配置你的网页服务器，使数据目录不再可访问，或者将数据目录移动到网页服务器根文档目录之外。 编辑网站配置文件，添加如下代码: location ~ ^/(data|config|\\.ht|db_structure\\.xml|README) { deny all;} PHP 无法访问 /dev/urandom, 由于安全原因, 这是强烈不推荐的. 编辑.../owncloud目录下的.user.ini文件，改为如下内容: upload_max_filesize=513Mpost_max_size=513Mmemory_limit=512Mmbstring.func_overload=0always_populate_raw_post_data=-1default_charset=&apos;UTF-8&apos;output_buffering=0 一些文件没有通过完整性检查。如何解决此问题的详细信息可以查看我们的 文档. (无效文件列表… / 重新扫描…) 跟之前保留的owncloud文件夹里的内容比较一下，看看有哪些文件不同替换过来就行(注意隐藏文件) 邮箱配置 在设置 &gt; 个人 &gt; 常规中设置好管理员邮箱地址并保存 按下图配置好电子邮件服务器(以QQ邮箱为例，不要和上面使用同一个邮箱)如何配置？ 配置完成后点击下面的***发送邮件***发送测试邮件，如果之前设置的管理员邮箱可以收到测试邮件说明配置成功。","link":"/posts/c733a53b/"},{"title":"Linux挂载硬盘","text":"分站内容可能或出现渲染错误或内容过时等问题，请以主站为准！分站禁止评论，评论请前往主站！需求: Linux新增加一块硬盘sdb，将sdb分区，只分一个区，格式化，挂载到目录/ssd下。 查看现在已有的分区状态 # df -l 图中显示，没有看到sdb硬盘 查看服务器安装的硬盘状态（包括格式化和未格式化） # fdisk -l 图中显示，有sdb硬盘，但是没有分区。 添加新分区 # fdisk /dev/sdb 按照以下红框输入 N → Enter P → Enter 1 → Enter Enter Enter W → Enter 用以下命令查看分区 # fdisk -l 图中红框显示已多出了一个分区，但是还没有格式化。 格式化分区 # mkfs -t ext4 -c /dev/sdb1 -t 制定要把磁盘格式化成什么类型 -c 在建立文件系统之前检查坏道，可能会很费时间，新硬盘一般不需要 挂载新硬盘 在根目录下，建一个文件夹，待会将分区挂载在这个文件夹上，以后要往新硬盘存东西就存在新建文件夹下就可以了。 # mkdir /ssd 挂载硬盘 # mount /dev/sdb1 /ssd 让系统开机自动挂载这块硬盘 编辑/etc/fstaba文件，在最末尾增加如下代码： /dev/sda1 /ssd ext4 defaults 0 0 本文转自 linux 新添加的硬盘格式化并挂载到目录下","link":"/posts/f096f3bc/"},{"title":"实用npm包","text":"分站内容可能或出现渲染错误或内容过时等问题，请以主站为准！分站禁止评论，评论请前往主站！ 为了避免每次找模块时都要百度，这里记一下我比较常用的模块及其简单的使用。 cheerio cheerio是jquery核心功能的一个快速灵活而又简洁的实现，主要是为了用在服务器端需要对DOM进行操作的地方。 安装 npm install cheerio 使用 const cheerio = require(&apos;cheerio&apos;),$ = cheerio.load(&apos;&lt;html&gt;&lt;body&gt;Hello, &lt;b&gt;world&lt;/b&gt;!&lt;/body&gt;&lt;/html&gt;&apos;); axios-https-proxy-fix axios-https-proxy-fix是修复axios代理https失败的分支版本。 安装 npm install axios-https-proxy-fix 使用 中文文档 moment moment 是一个 JavaScript 日期处理类库,用于解析、检验、操作、以及显示日期。 安装 npm install moment 使用 const moment = require(&apos;moment &apos;),moment().format(&apos;YYYY-MM-DD HH:mm:ss&apos;); Lodash Lodash 是一个一致性、模块化、高性能的 JavaScript 实用工具库。 安装 npm install lodash 使用 中文文档 ali-oss ali-oss 是使用NodeJs操作阿里云OSS官方模块。 安装 npm install ali-oss 使用 中文文档 Puppeteer Puppeteer 是一个 Node 库，它提供了一个高级 API 来通过 DevTools 协议控制 Chromium 或 Chrome。 安装 npm i puppeteer 使用 中文文档 nrm nrm(npm registry manager )是npm的镜像源管理工具，有时候国外资源太慢，使用这个就可以快速地在 npm 源间切换。 安装 npm install -g nrm 使用 查看可选的源 &gt; nrm ls* npm -------- https://registry.npmjs.org/ yarn ------- https://registry.yarnpkg.com/ cnpm ------- http://r.cnpmjs.org/ taobao ----- https://registry.npm.taobao.org/ nj --------- https://registry.nodejitsu.com/ npmMirror -- https://skimdb.npmjs.com/registry/ edunpm ----- http://registry.enpmjs.org/ 切换到taobao源 &gt; nrm use taobao Registry has been set to: https://registry.npm.taobao.org/","link":"/posts/2413eaa8/"},{"title":"NodeJs读取某目录下所有目录和文件名","text":"分站内容可能或出现渲染错误或内容过时等问题，请以主站为准！分站禁止评论，评论请前往主站！代码如下： const path = require(&quot;path&quot;);const fs = require(&quot;fs&quot;);const pathName = &quot;./&quot;;//要读取的文件夹路径，windows系统路径&quot;\\&quot;要转义，如：&quot;C:\\\\Users\\\\user\\\\Desktop&quot;fs.readdir(pathName, function(err, files){ let fileArr = []; let dirArr = []; let otherArr = []; (function iterator(i){ if(i == files.length) {//读取完成输出 console.log({&quot;files&quot;:fileArr,&quot;dirs&quot;:dirArr,&quot;others&quot;:otherArr}); return ; } fs.stat(path.join(pathName, files[i]), function(err, data){ if(data.isFile()){//判断是否为文件 fileArr.push(path.extname(files[i])); }else if(data.isDirectory()){//判断是否为文件夹/目录 dirArr.push(files[i]); }else{//其他类型，如快捷方式 otherArr.push(files[i]); } iterator(i+1); }); })(0);});","link":"/posts/a3dcda7b/"},{"title":"使用Cloud Studio在线搭建、编辑、部署Hexo","text":"分站内容可能或出现渲染错误或内容过时等问题，请以主站为准！分站禁止评论，评论请前往主站！ 创建工作空间 前往Coding注册一个帐号 登录后点击右上角的Cloud Studio 点击设置，将ssh公钥添加到Coding或Github或者其他的Git仓库的个人公钥列表 点击工作空间，新建工作空间 从零开始搭建Hexo 工作空间名称能自己看懂就行，运行环境选择预置环境、Node.js，代码来源选空，然后创建 点击刚刚创建的工作空间 按下键盘Ctrl+~打开终端 按照官方教程依次输入一下命令就可以了 npm install hexo-cli -ghexo init blogcd blognpm install 到这里一个博客就基本搭建完成了，其他的去看Hexo官方文档就可以了 我已经搭建好了Hexo 工作空间名称能自己看懂就行，运行环境选择预置环境、Node.js，代码来源选仓库，并在下面输入你源码仓库的SSH地址，然后创建 点击刚刚创建的工作空间，它会自动克隆你的源码，你只需要运行npm install命令安装所需依赖就可以了 预览 我们在本地只需运行hexo server就可以在http://localhost:4000预览了，不过用Cloud Studio的话运行hexo server命令后，需要Ctrl+Shift+P打开命令面板，输入preview,选择Preview: Open Preview Tab输入端口号（默认4000）回车就可以了 插件（可选） 如果你用过Vscode, 下面可以不用看了，安装你喜欢的插件就可以了 点击左边的Extensions可以安装扩展，这里推荐几个适用于编辑Hexo的插件 JavaScript支持 在欢迎使用页面点击安装对JavaScript的支持，右下角会有弹窗，确定即可 Markdown Preview Enhanced Markdown预览插件","link":"/posts/a7676fbe/"},{"title":"Valine添加博主标签及评论微信、QQ通知","text":"分站内容可能或出现渲染错误或内容过时等问题，请以主站为准！分站禁止评论，评论请前往主站！ 本教程介绍了如何给Valine评论系统添加博主、小伙伴、 访客标签，添加浏览器及操作系统图标，以及评论微信及QQ通知。 添加标签及图标 基于https://github.com/xCss/Valine修改。由于1.4.0以后Valine作者不再发布源码，所以这里不说如何修改了，只放出我修改好的js链接及使用方法。 链接 https://cdn.jsdelivr.net/gh/HCLonely/Valine@latest/dist/Valine.min.js 与原版相比 添加博主，小伙伴，访客标签 添加浏览器和操作系统图标，需fontawesomeV5支持 邮箱检测更严格 增加QQ邮箱识别（原版只能通过昵称栏输入QQ号识别） meta placeholder可自定义 使用方法 基本方法同原版相同，请先查看原版使用文档并配置好。 本版比原版多了以下参数： 参数 类型 说明 默认 示例 tagMeta Array 标签要显示的文字 [“博主”,“小伙伴”,“访客”] [“博主”,“小伙伴”,“访客”] master Array/String md5加密后的博主邮箱 [] [“fe01ce2a7fbac8fafaed7c982a04e229”] friends Array md5加密后的小伙伴邮箱 [] [“fe01ce2a7fbac8fafaed7c982a04e229”] metaPlaceholder Object meta placeholder内容 {} {“nick”:“昵称/QQ号”,“mail”:“邮箱(必填)”} verify Boolean 评论是是否需要验证，需jQuery支持 false true 示例 评论微信通知及QQ通知 基于https://github.com/DesertsP/Valine-Admin修改。修改方法不在多说，直接使用我的源码即可，如果你有一定的NodeJS知识，可以参考我的源码自行修改。 注意！由于leancloud的原因，自动唤醒任务可能会失败！详情：https://forum.leancloud.cn/t/topic/22595解决办法: https://blog.hclonely.com/posts/ac04080d/ 仓库地址 https://github.com/HCLonely/Valine-Admin.git 与原版相比： 不可自定义邮件通知模板 添加微信提醒功能 添加QQ提醒功能 添加禁止邮件提醒功能 使用方法 基本方法同原版相同，请先查看原版使用文档并配置好。 本版比原版多了以下参数： 变量 示例 说明 SERVER_KEY SCUxxxxxxxx [可选]Server酱 SCKEY 用于微信通知 QMSG_KEY xxxxxxxx [可选]Qmsg key 用于QQ通知 QQ_SHAKE true [可选]QQ通知时发送戳一戳 DISABLE_EMAIL true [可选]禁止邮件通知博主，@仍然会提醒 TEMPLATE_NAME rainbow [可选]rainbow或default邮件通知模板 邮件通知模板(模板变量与原版不同) 邮件通知模板在云引擎环境变量中设定，可自定义通知邮件标题及内容模板。 环境变量 示例 说明 MAIL_SUBJECT ${PARENT_NICK}，您在${SITE_NAME}上的评论收到了回复 [可选]@通知邮件主题（标题）模板 MAIL_TEMPLATE 见下文 [可选]@通知邮件内容模板 MAIL_SUBJECT_ADMIN ${SITE_NAME}上有新评论了 [可选]博主邮件通知主题模板 MAIL_TEMPLATE_ADMIN 见下文 [可选]博主邮件通知内容模板 邮件通知包含两种，分别是被@通知和博主通知，这两种模板都可以完全自定义。默认使用经典的蓝色风格模板（样式来源未知）。 默认被@通知邮件内容模板如下： &lt;html&gt; &lt;head&gt;&lt;/head&gt; &lt;body&gt; &lt;table style=&quot;width: 99.8%;height:99.8% &quot;&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt; &lt;div style=&quot;border-radius: 10px 10px 10px 10px;font-size:13px; color: #555555;width: 666px;font-family:&apos;Century Gothic&apos;,&apos;Trebuchet MS&apos;,&apos;Hiragino Sans GB&apos;,微软雅黑,&apos;Microsoft Yahei&apos;,Tahoma,Helvetica,Arial,&apos;SimSun&apos;,sans-serif;margin:50px auto;border:1px solid #eee;max-width:100%;background: #ffffff repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);&quot;&gt; &lt;div style=&quot;width:100%;background:#49BDAD;color:#ffffff;border-radius: 10px 10px 0 0;background-image: -moz-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));background-image: -webkit-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));height: 66px;&quot;&gt; &lt;p style=&quot;font-size:15px;word-break:break-all;padding: 23px 32px;margin:0;background-color: hsla(0,0%,100%,.4);border-radius: 10px 10px 0 0;&quot;&gt;您在&lt;a style=&quot;text-decoration:none;color: #ffffff;&quot; href=&quot;&lt;%=siteUrl%&gt;&quot;&gt; &lt;%=siteName%&gt; &lt;/a&gt;上的留言有新回复啦！ &lt;/p&gt; &lt;/div&gt; &lt;div style=&quot;margin:40px auto;width:90%&quot;&gt; &lt;p&gt;&lt;%=pname%&gt; 同学，您曾在文章上发表评论：&lt;/p&gt; &lt;div style=&quot;background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;&quot;&gt;&lt;%-ptext%&gt;&lt;/div&gt; &lt;p&gt;&lt;%=name%&gt; 给您的回复如下：&lt;/p&gt; &lt;div style=&quot;background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;&quot;&gt;&lt;%-text%&gt;&lt;/div&gt; &lt;p&gt;您可以点击 &lt;a style=&quot;text-decoration:none; color:#12addb&quot; href=&quot;&lt;%=url%&gt;&quot;&gt;查看回复的完整內容 &lt;/a&gt;，欢迎再次光临 &lt;a style=&quot;text-decoration:none; color:#12addb&quot; href=&quot;&lt;%=siteUrl%&gt;&quot;&gt; &lt;%=siteName%&gt; &lt;/a&gt;。&lt;/p&gt; &lt;style type=&quot;text/css&quot;&gt;a:link{text-decoration:none}a:visited{text-decoration:none}a:hover{text-decoration:none}a:active{text-decoration:none}&lt;/style&gt; &lt;/div&gt; &lt;/div&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/body&gt; &lt;/html&gt; @通知模板中的可用变量如下（注，这是邮件模板变量，请勿与云引擎环境变量混淆）： 模板变量 说明 &lt;%=siteName%&gt; 博客名称 &lt;%=siteUrl%&gt; 博客首页地址 &lt;%=url%&gt; 文章地址（完整路径） &lt;%=pname%&gt; 收件人昵称（被@者，父级评论人） &lt;%-ptext%&gt; 父级评论内容 &lt;%=name%&gt; 新评论者昵称 &lt;%-text%&gt; 新评论内容 默认博主通知邮件内容模板如下： &lt;html&gt; &lt;head&gt; &lt;style&gt; .wrap span { display: inline-block; } .w260{ width: 260px;} .w20{ width: 20px;} .wauto{ width: auto;} &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;table style=&quot;width: 99.8%;height:99.8% &quot;&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt; &lt;div style=&quot;border-radius: 10px 10px 10px 10px;font-size:13px; color: #555555;width: 666px;font-family:&apos;Century Gothic&apos;,&apos;Trebuchet MS&apos;,&apos;Hiragino Sans GB&apos;,微软雅黑,&apos;Microsoft Yahei&apos;,Tahoma,Helvetica,Arial,&apos;SimSun&apos;,sans-serif;margin:50px auto;border:1px solid #eee;max-width:100%;background: #ffffff repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);&quot;&gt; &lt;div style=&quot;width:100%;background:#49BDAD;color:#ffffff;border-radius: 10px 10px 0 0;background-image: -moz-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));background-image: -webkit-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));height: 66px;&quot;&gt; &lt;p style=&quot;font-size:15px;word-break:break-all;padding: 23px 32px;margin:0;background-color: hsla(0,0%,100%,.4);border-radius: 10px 10px 0 0;&quot;&gt;您的&lt;a style=&quot;text-decoration:none;color: #ffffff;&quot; href=&quot;&lt;%=siteUrl%&gt;&quot;&gt; &lt;%=siteName%&gt; &lt;/a&gt;上有新的评论啦！ &lt;/p&gt; &lt;/div&gt; &lt;div style=&quot;margin:40px auto;width:90%&quot;&gt; &lt;p&gt;&lt;%=name%&gt; 发表评论：&lt;/p&gt; &lt;div style=&quot;background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;&quot;&gt;&lt;%-text%&gt;&lt;/div&gt; &lt;p&gt;&lt;a style=&quot;text-decoration:none; color:#12addb&quot; href=&quot;&lt;%=url%&gt;&quot; target=&quot;_blank&quot;&gt;[查看评论]&lt;/a&gt;&lt;/p&gt; &lt;style type=&quot;text/css&quot;&gt;a:link{text-decoration:none}a:visited{text-decoration:none}a:hover{text-decoration:none}a:active{text-decoration:none}&lt;/style&gt; &lt;/div&gt; &lt;/div&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;/body&gt; &lt;/html&gt; 博主通知邮件模板中的可用变量与@通知中的基本一致，&lt;%=pname%&gt; 和 &lt;%-ptext%&gt; 变量不再可用。 示例","link":"/posts/409d3090/"},{"title":"Windows配置Aria2教程","text":"分站内容可能或出现渲染错误或内容过时等问题，请以主站为准！分站禁止评论，评论请前往主站！  Aria2 是一个多平台轻量级，支持 HTTP、FTP、BitTorrent 等多协议、多来源的命令行下载工具。Aria2 可以从多个来源、多个协议下载资源，最大的程度上利用了你的带宽。Aria2 有着非常小的资源占用，在关闭磁盘缓存的情况下，物理内存占用通常为 4M（正常 HTTP/FTP 下载的情况下），BitTorrent 下载每秒2.8M/S的情况下，CPU 占有率约为 6%。Aria2 支持 JSON-RPC 和 XML-RPC 接口远程调用。 安装前准备文件 Aria2主程序： 官方下载 备用下载(32位) 备用下载(64位) Aria2配置文件： 官方下载 备用下载 Aria2控制脚本： 官方下载 备用下载 安装步骤 将Aria2主程序,Aria2配置文件和Aria2控制脚本解压到同一目录 编辑aria2.conf文件 ari2.conf里已自带默认参数 ，也可根据自己的需要设置ari2.conf文件里的参数： ## &apos;#&apos;开头为注释内容, 选项都有相应的注释说明, 根据需要修改 #### 被注释的选项填写的是默认值, 建议在需要修改时再取消注释 #### 文件保存相关 ### 文件的保存路径(可使用绝对路径或相对路径), 默认: 当前启动位置dir=Download# 启用磁盘缓存, 0为禁用缓存, 需1.16以上版本, 默认:16Mdisk-cache=32M# 文件预分配方式, 能有效降低磁盘碎片, 默认:prealloc# 预分配所需时间: none &lt; falloc &lt; trunc &lt; prealloc# NTFS建议使用fallocfile-allocation=none# 断点续传continue=true## 下载连接相关 ### 最大同时下载任务数, 运行时可修改, 默认:5max-concurrent-downloads=10# 同一服务器连接数, 添加时可指定, 默认:1max-connection-per-server=5# 最小文件分片大小, 添加时可指定, 取值范围1M -1024M, 默认:20M# 假定size=10M, 文件为20MiB 则使用两个来源下载; 文件为15MiB 则使用一个来源下载min-split-size=10M# 单个任务最大线程数, 添加时可指定, 默认:5split=20# 整体下载速度限制, 运行时可修改, 默认:0#max-overall-download-limit=0# 单个任务下载速度限制, 默认:0#max-download-limit=0# 整体上传速度限制, 运行时可修改, 默认:0max-overall-upload-limit=1M# 单个任务上传速度限制, 默认:0#max-upload-limit=1000# 禁用IPv6, 默认:falsedisable-ipv6=false## 进度保存相关 ### 从会话文件中读取下载任务input-file=aria2.session# 在Aria2退出时保存`错误/未完成`的下载任务到会话文件save-session=aria2.session# 定时保存会话, 0为退出时才保存, 需1.16.1以上版本, 默认:0#save-session-interval=60## RPC相关设置 ### 启用RPC, 默认:falseenable-rpc=true# 允许所有来源, 默认:falserpc-allow-origin-all=true# 允许非外部访问, 默认:falserpc-listen-all=true# 事件轮询方式, 取值:[epoll, kqueue, port, poll, select], 不同系统默认值不同#event-poll=select# RPC监听端口, 端口被占用时可以修改, 默认:6800#rpc-listen-port=6800# 设置的RPC授权令牌, v1.18.4新增功能, 取代 --rpc-user 和 --rpc-passwd 选项#rpc-secret=mivm.cn# 设置的RPC访问用户名, 此选项新版已废弃, 建议改用 --rpc-secret 选项#rpc-user=&lt;USER&gt;# 设置的RPC访问密码, 此选项新版已废弃, 建议改用 --rpc-secret 选项#rpc-passwd=&lt;PASSWD&gt;## BT/PT下载相关 ### 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:truefollow-torrent=true# BT监听端口, 当端口被屏蔽时使用, 默认:6881-6999listen-port=51413# 单个种子最大连接数, 默认:55#bt-max-peers=55# 打开DHT功能, PT需要禁用, 默认:trueenable-dht=true# 打开IPv6 DHT功能, PT需要禁用#enable-dht6=false# DHT网络监听端口, 默认:6881-6999#dht-listen-port=6881-6999# 本地节点查找, PT需要禁用, 默认:false#bt-enable-lpd=true# 种子交换, PT需要禁用, 默认:trueenable-peer-exchange=true# 每个种子限速, 对少种的PT很有用, 默认:50K#bt-request-peer-speed-limit=50K# 客户端伪装, PT需要peer-id-prefix=-TR2770-user-agent=Transmission/2.77# 当种子的分享率达到这个数时, 自动停止做种, 0为一直做种, 默认:1.0seed-ratio=0.1# 强制保存会话, 即使任务已经完成, 默认:false# 较新的版本开启后会在任务完成后依然保留.aria2文件#force-save=false# BT校验相关, 默认:true#bt-hash-check-seed=true# 继续之前的BT任务时, 无需再次校验, 默认:falsebt-seed-unverified=true# 保存磁力链接元数据为种子文件(.torrent文件), 默认:false#bt-save-metadata=true 双击运行Start.bat(前台运行)或Start.vbs(后台运行)，首次运行会弹出防火墙提示，选择允许即可 说明 GitHub源码： https://github.com/aria2/aria2 官方文档： https://aria2.github.io/","link":"/posts/5579cd4b/"},{"title":"Hexo-online-server在线编辑发布文章插件","text":"分站内容可能或出现渲染错误或内容过时等问题，请以主站为准！分站禁止评论，评论请前往主站！ 本插件已实现以下功能: 在线新建，编辑，删除post和page(默认路径) hexo clean,hexo server,hexo deploy 源码同步 需求 Node.js &gt;= 10.0 Hexo 4.X(只测试了4.X) Git mac系统close server功能无法使用(我没有mac设备，无法测试) 准备工作 将源码托管到Git仓库(建议使用私人仓库, 只在本地使用可无视) 配置好git, 确认可以使用以下默认命令进行同步: git pull git add --all . git commit -m &quot;...&quot; git push 使用 安装 npm install hexo-online-server 配置 新建config.json文件, 内容如下(注释删掉): { &quot;indexPath&quot;:&quot;/&quot;,// 自定义主页路径, 以&quot;/&quot;结尾 &quot;port&quot;: 4001,// http监听端口 &quot;wsPort&quot;: 4002,//websocke监听端口 &quot;secret&quot;:&quot;&quot;,//用来签名session ID cookie,https://www.npmjs.com/package/express-session#secret &quot;user&quot;:&quot;&quot;,//登录用户名 &quot;passwordHash&quot;: &quot;&quot;,//密码加密后的字符串 &quot;autoSave&quot;: 300000,//编辑文章时自动保存时间, 单位:ms, 0为不自动保存 &quot;noticeUrl&quot;:&quot;&quot;,//当有用户登录时向`此链接+message`发送get请求，留空则不通知 &quot;pull&quot;:[&quot;git pull&quot;],//从git同步命令 &quot;push&quot;:[&quot;git add --all .&quot;,&quot;git commit -m &apos;Update at {time}&apos;&quot;,&quot;git push&quot;],//同步到git命令 &quot;ssl&quot;:false,//是否启用SSL &quot;private&quot;:{//启用ssl需配置此项 &quot;key&quot;:&quot;&quot;,//SSL证书key路径 &quot;crt&quot;:&quot;&quot;//SSL证书路径 }} 注意把后面的注释删掉！ 把config.json文件保存到你的博客目录以外的地方, 在_config.yml中添加: onlineConfigPath: &apos;../config.json&apos; #`config.json`文件路径 使用以下命令获取加密密码, 将得到的passwordHash添加到config.json文件: &gt; hexo bcrypt 你的密码 运行hexo online, 浏览器打开http://localhost:4001/ 常见问题 源码同步 如果你只在本地或只在服务器使用，可以选择不进行同步， 如果你本地和服务器都使用，每次编辑前请从git同步，编辑完成后同步到git 部署 如果你使用的自动部署，直接将源码同步到git仓库即可，不用hexo deploy LICENSE MIT","link":"/posts/ebe9edfc/"},{"title":"Hexo-tag-steamgame插件","text":"分站内容可能或出现渲染错误或内容过时等问题，请以主站为准！分站禁止评论，评论请前往主站！ 用于在Hexo博客中嵌入steam游戏。 安装 npm install hexo-tag-steamgame --save 使用方法 嵌入单个游戏 {% steamgame appid description %} 批量嵌入游戏 {% steamgames %}appidappidappidappidappidappid{% endsteamgames %} 参数 appid: Steam 游戏 id.description(可选): 用于替换默认游戏简介。 Demo {% steamgame 1057090 %} {% steamgame 1057090 &quot;I like it.&quot; %} {% steamgames %}2615701057090{% endsteamgames %} License MIT","link":"/posts/94295339/"},{"title":"linux下aria2的安装与配置","text":"分站内容可能或出现渲染错误或内容过时等问题，请以主站为准！分站禁止评论，评论请前往主站！这里来介绍一下linux系统下aria2的安装与配置 Ubuntu ubuntu的用户可以直接使用下面命令完成aria2的安装: sudo apt-get install aria2 CentOS 下载 到githup上获取源码：https://github.com/aria2/aria2/releases 备用下载 我使用的是这个版本: https://github.com/aria2/aria2/releases/download/release-1.35.0/aria2-1.35.0.tar.gz 定位到aria2目录并输入以下命令下载: cd /ssd/aria2 &amp;&amp; wget https://github.com/aria2/aria2/releases/download/release-1.35.0/aria2-1.35.0.tar.gz 升级gcc 编译aria2需要升级一下gcc，最低要求 gcc &gt;= 4.8.2，使用gcc --version查看当前gcc版本，如果你的gcc已经在符合这个要求就可以跳到下一步了 复制下面代码，保存为：update_gcc.sh # 添加一个源cd /etc/yum.repos.dwget http://people.centos.org/tru/devtools-2/devtools-2.repo# 安装所需包yum install devtoolset-2-gcc devtoolset-2-binutils devtoolset-2-gcc-c++# 保存原来的版本mv /usr/bin/gcc /usr/bin/gcc-4.4.7mv /usr/bin/g++ /usr/bin/g++-4.4.7mv /usr/bin/c++ /usr/bin/c++-4.4.7# 链接到新版本的gccln -s /opt/rh/devtoolset-2/root/usr/bin/gcc /usr/bin/gccln -s /opt/rh/devtoolset-2/root/usr/bin/c++ /usr/bin/c++ln -s /opt/rh/devtoolset-2/root/usr/bin/g++ /usr/bin/g++# 查看当前gcc版本gcc --version 给予update_gcc.sh文件可执行权限并执行 chmod 754 update_gcc.sh &amp;&amp; ./update_gcc.sh 在执行之前需要确保安装了wget，如果没有wget的话，脚本执行会报错!!! 等待完成!!! 解压并开始编译安装 tar zxvf aria2-1.34.0.tar.gz &amp;&amp; cd aria2-1.34.0 &amp;&amp; mkdir build &amp;&amp; cd build &amp;&amp; ../configure &amp;&amp; make &amp;&amp; make install 比较长时间的等待~~ 创建目录与配置文件 # 这一步需要切换到root下进行 # 需要 su 一下cd /ssd/www &amp;&amp; mkdir aria2 &amp;&amp; cd aria2 &amp;&amp; touch aria2.conf &amp;&amp; touch aria2.session 编辑aria2.conf文件内容，内容如下: # 文件的保存路径(可使用绝对路径或相对路径), 默认: 当前启动位置#dir=~/download# 启用磁盘缓存, 0为禁用缓存, 需1.16以上版本, 默认:16Mdisk-cache=5M# 文件预分配方式, 能有效降低磁盘碎片, 默认:prealloc# 预分配所需时间: none &lt; falloc ? trunc &lt; prealloc# falloc和trunc则需要文件系统和内核支持, NTFS建议使用falloc, EXT3/4建议truncfile-allocation=none# 断点续传continue=true## 下载连接相关 ### 最大同时下载任务数, 运行时可修改, 默认:5max-concurrent-downloads=5# 同一服务器连接数, 添加时可指定, 默认:1max-connection-per-server=15# 最小文件分片大小, 添加时可指定, 取值范围1M -1024M, 默认:20M# 假定size=10M, 文件为20MiB 则使用两个来源下载; 文件为15MiB 则使用一个来源下载min-split-size=10M# 单个任务最大线程数, 添加时可指定, 默认:5split=5# 整体下载速度限制, 运行时可修改, 默认:0#max-overall-download-limit=0# 单个任务下载速度限制, 默认:0#max-download-limit=0# 整体上传速度限制, 运行时可修改, 默认:0max-overall-upload-limit=20kb# 单个任务上传速度限制, 默认:0max-upload-limit=5kb# 禁用IPv6, 默认:falsedisable-ipv6=true# 禁用https证书检查check-certificate=false#运行覆盖已存在文件allow-overwrite=true#自动重命名auto-file-renaming## 进度保存相关 ### 从会话文件中读取下载任务input-file=/etc/aria2/aria2.session# 在Aria2退出时保存`错误/未完成`的下载任务到会话文件save-session=/etc/aria2/aria2.session# 定时保存会话, 0为退出时才保存, 需1.16.1以上版本, 默认:0save-session-interval=30## RPC相关设置 ### 启用RPC, 默认:falseenable-rpc=true# 允许所有来源, 默认:falserpc-allow-origin-all=true# 允许非外部访问, 默认:falserpc-listen-all=true# 事件轮询方式, 取值:[epoll, kqueue, port, poll, select], 不同系统默认值不同#event-poll=select# RPC监听端口, 端口被占用时可以修改, 默认:6800rpc-listen-port=6800# 保存上传的种子文件rpc-save-upload-metadata=false## BT/PT下载相关 ### 当下载的是一个种子(以.torrent结尾)时, 自动开始BT任务, 默认:true#follow-torrent=true# BT监听端口, 当端口被屏蔽时使用, 默认:6881-6999listen-port=51413# 单个种子最大连接数, 默认:55#bt-max-peers=55# 打开DHT功能, PT需要禁用, 默认:trueenable-dht=true# 打开IPv6 DHT功能, PT需要禁用enable-dht6=false# DHT网络监听端口, 默认:6881-6999#dht-listen-port=6881-6999# 本地节点查找, PT需要禁用, 默认:falsebt-enable-lpd=true# 种子交换, PT需要禁用, 默认:trueenable-peer-exchange=true# 每个种子限速, 对少种的PT很有用, 默认:50K#bt-request-peer-speed-limit=50K# 客户端伪装, PT需要peer-id-prefix=-UT341-user-agent=uTorrent/341(109279400)(30888)# 当种子的分享率达到这个数时, 自动停止做种, 0为一直做种, 默认:1.0seed-ratio=1.0# 强制保存会话, 话即使任务已经完成, 默认:false# 较新的版本开启后会在任务完成后依然保留.aria2文件#force-save=false# BT校验相关, 默认:true#bt-hash-check-seed=true# 继续之前的BT任务时, 无需再次校验, 默认:falsebt-seed-unverified=true# 保存磁力链接元数据为种子文件(.torrent文件), 默认:false#bt-save-metadata=false#仅下载种子文件bt-metadata-only=true#通过网上的种子文件下载，种子保存在内存follow-torrent=mem 设置环境变量 编辑~/.bashrc文件,加入下面内容 export PATH=/usr/local/src/aria2-1.33.0/build/src:$PATH 执行下面命令，使环境变量设置生效： source ~/.bashrc 完成这一系列操作后，输入 aria 并可以补全的话就说明aria2已经安装成功了!!! 然后，你就可以使用aria2下载你的bt种子或磁力链了，执行aria2c -h查看使用说明 处理aria2下载bt种子或磁力链无速度或速度慢的情况，添加tracker 在aria2c.conf文件中添加下面内容: bt-tracker=tracker url.....例如:bt-tracker=udp://tracker.coppersurfer.tk:6969/announce,udp://tracker.open-internet.nl:6969/announce,udp://tracker.leechers-paradise.org:6969/announce,udp://tracker.opentrackr.org:1337/announce,http://tracker.internetwarriors.net:1337/announce,udp://9.rarbg.to:2710/announce,udp://exodus.desync.com:6969/announce,http://tracker3.itzmx.com:6961/announce,udp://explodie.org:6969/announce,udp://ipv4.tracker.harry.lu:80/announce,udp://denis.stalker.upeer.me:6969/announce,udp://tracker4.itzmx.com:2710/announce,udp://tracker.tiny-vps.com:6969/announce,udp://tracker.port443.xyz:6969/announce,udp://thetracker.org:80/announce,udp://open.stealth.si:80/announce,udp://open.demonii.si:1337/announce,udp://bt.xxx-tracker.com:2710/announce,udp://tracker1.wasabii.com.tw:6969/announce,udp://tracker.torrent.eu.org:451/announce tracker 地址自行到这里取最新的添加，每个地址之间以逗号分开: https://github.com/ngosang/trackerslist 使用以下命令后台启动: aria2c --conf-path=/ssd/www/aria2/aria2.conf -D 本文转自 linux下aria2的安装与配置","link":"/posts/b9ab9265/"},{"title":"live2D看板娘脚本","text":"分站内容可能或出现渲染错误或内容过时等问题，请以主站为准！分站禁止评论，评论请前往主站！ 功能 给网页添加一个Live2D看板娘。 脚本链接 点此安装 GreasyFork 模型预览 https://live2d.hclonely.com/#preview 详细设置 设置参数 Tips： 已自带默认参数，如无特殊要求可跳过 后端接口 live2d_settings[&apos;modelAPI&apos;]：看板娘 API 地址，默认值 &apos;https://live2d.hclonely.com/&apos;, 可根据live2d_api自建api live2d_settings[&apos;staticAPI&apos;]：看板娘模型 API 地址，默认值 &apos;https://cdn.jsdelivr.net&apos; live2d_settings[&apos;tipsMessage&apos;]：提示语读取路径，暂不可改 live2d_settings[&apos;hitokotoAPI&apos;]：一言 API 接口，可选 &apos;lwl12.com&apos;，&apos;hitokoto.cn&apos;，&apos;fghrsh.net&apos;，&apos;jinrishici.com&apos; (古诗词)，&apos;rand&apos; (随机) 默认模型 live2d_settings[&apos;modelId&apos;]：默认模型(分组) ID，可 [F12] 呼出 控制台(Console) 找到 live2d_settings[&apos;modelTexturesId&apos;]：默认材质(模型) ID，可 [F12] 呼出 控制台(Console) 找到 工具栏设置 live2d_settings[&apos;showToolMenu&apos;]：显示工具栏， true | false live2d_settings[&apos;canCloseLive2d&apos;]：关闭看板娘 按钮，true | false live2d_settings[&apos;canSwitchModel&apos;]：切换模型 按钮， true | false live2d_settings[&apos;canSwitchTextures&apos;]：切换材质 按钮， true | false live2d_settings[&apos;canSwitchHitokoto&apos;]：切换一言 按钮， true | false live2d_settings[&apos;canTakeScreenshot&apos;]：看板娘截图 按钮，true | false live2d_settings[&apos;canTurnToHomePage&apos;]：返回首页 按钮， true | false live2d_settings[&apos;canTurnToAboutPage&apos;]：跳转关于页 按钮，true | false 模型切换模式 live2d_settings[&apos;modelStorage&apos;]：记录 ID ，true | false live2d_settings[&apos;modelRandMode&apos;]：模型切换，可选 &apos;rand&apos; (随机) | &apos;switch&apos; (顺序) live2d_settings[&apos;modelTexturesRandMode&apos;]：材质切换，可选 &apos;rand&apos; | &apos;switch&apos; 提示消息选项 live2d_settings[&apos;showHitokoto&apos;]：空闲时一言，true | false live2d_settings[&apos;showF12Status&apos;]：控制台显示加载状态，true | false live2d_settings[&apos;showF12Message&apos;]：提示消息输出到控制台，true | false live2d_settings[&apos;showF12OpenMsg&apos;]：控制台被打开触发提醒，true | false live2d_settings[&apos;showCopyMessage&apos;]：内容被复制触发提醒，true | false live2d_settings[&apos;showWelcomeMessage&apos;]：进入面页时显示欢迎语，true | false 看板娘样式设置 live2d_settings[&apos;waifuSize&apos;]：看板娘大小，例如 &apos;280x250&apos;，&apos;600x535&apos; live2d_settings[&apos;waifuTipsSize&apos;]：提示框大小，例如 &apos;250x70&apos;，&apos;570x150&apos; live2d_settings[&apos;waifuFontSize&apos;]：提示框字体，例如 &apos;12px&apos;，&apos;30px&apos; live2d_settings[&apos;waifuToolFont&apos;]：工具栏字体，例如 &apos;14px&apos;，&apos;36px&apos; live2d_settings[&apos;waifuToolLine&apos;]：工具栏行高，例如 &apos;20px&apos;，&apos;36px&apos; live2d_settings[&apos;waifuToolTop&apos;]：工具栏顶部边距，例如 &apos;0px&apos;，&apos;-60px&apos; live2d_settings[&apos;waifuMinWidth&apos;]：面页小于 指定宽度 隐藏看板娘，例如 &apos;disable&apos; (停用)，&apos;768px&apos; live2d_settings[&apos;waifuEdgeSide&apos;]：看板娘贴边方向，例如 &apos;left:0&apos; (靠左 0px)，&apos;right:30&apos; (靠右 30px) live2d_settings[&apos;waifuDraggable&apos;]：拖拽样式，可选 &apos;disable&apos; (禁用)，&apos;axis-x&apos; (只能水平拖拽)，&apos;unlimited&apos; (自由拖拽) live2d_settings[&apos;waifuDraggableRevert&apos;]：松开鼠标还原拖拽位置，true | false live2d_settings[&apos;waifuDraggableSave&apos;]：是否保存拖拽后的位置，刷新后依然生效，需要将上面的选项和下面的选项都设置为false，true | false live2d_settings[&apos;waifuDraggableClear&apos;]：清空上次保存的位置，true | false 其他杂项设置 live2d_settings[&apos;l2dVersion&apos;]：当前版本 (无需修改) live2d_settings[&apos;l2dVerDate&apos;]：更新日期 (无需修改) live2d_settings[&apos;homePageUrl&apos;]：首页地址，可选 &apos;auto&apos; (自动)，&apos;{URL 网址}&apos; live2d_settings[&apos;aboutPageUrl&apos;]：关于页地址，&apos;{URL 网址}&apos; live2d_settings[&apos;screenshotCaptureName&apos;]：看板娘截图文件名，例如 &apos;live2d.png&apos; 定制提示语 Tips： waifu-tips.json 已自带默认提示语，如无特殊要求可跳过 &quot;waifu&quot; 系统提示 &quot;console_open_msg&quot; 控制台被打开提醒（支持多句随机） &quot;copy_message&quot; 内容被复制触发提醒（支持多句随机） &quot;screenshot_message&quot; 看板娘截图提示语（支持多句随机） &quot;hidden_message&quot; 看板娘隐藏提示语（支持多句随机） &quot;load_rand_textures&quot; 随机材质提示语（暂不支持多句） &quot;hour_tips&quot; 时间段欢迎语（支持多句随机） &quot;referrer_message&quot; 请求来源欢迎语（不支持多句） &quot;referrer_hostname&quot; 请求来源自定义名称（根据 host，支持多句随机） &quot;model_message&quot; 模型切换欢迎语（根据模型 ID，支持多句随机） &quot;hitokoto_api_message&quot;，一言 API 输出模板（不支持多句随机） &quot;mouseover&quot; 鼠标触发提示（根据 CSS 选择器，支持多句随机） &quot;click&quot; 鼠标点击触发提示（根据 CSS 选择器，支持多句随机） &quot;seasons&quot; 节日提示（日期段，支持多句随机） 模式设置 模式切换：英文输入法下依次按下&quot;↑↑↓↓←→←→BABA&quot;(引号不用按，注意是方向键不是WASD)后可进入互动模式，互动模式下依次按下&quot;ESC&quot;(引号不用按，注意不是&quot;Esc&quot;键而是&quot;E&quot;“S”&quot;C&quot;这三个字母键)后可退出互动模式。 状态切换：英文输入法下依次按下&quot;hide&quot;后可隐藏看板娘，隐藏状态下依次按下&quot;show&quot;可再次显示看板娘。 ps:模式切换后会保存（刷新网页后还是刷新前的状态），状态切换后不会保存（刷新网页后恢复默认状态：显示状态）。 普通模式：默认为普通模式，此模式下为了浏览网页体验看板娘不可操作（看板娘显示在最前但鼠标可以操作后面的元素）。 互动模式：此模式下看板娘显示在最前并且鼠标优先操作看板娘。","link":"/posts/f09c9fef/"},{"title":"steam一键移除脚本","text":"分站内容可能或出现渲染错误或内容过时等问题，请以主站为准！分站禁止评论，评论请前往主站！ 功能 取关鉴赏家：取关 所有 选中的鉴赏家(包括开发商)，因为steam限制鉴赏家(包括开发商)的关注上限是100个，所以这个功能还是常用的。 取关游戏：取关 所有 选中的游戏（关注游戏后，可以在您的社区活动信息中查看通知）。 移除愿望单：移除 所有 选中的愿望单里的游戏，建议给薅羊毛的小号使用，不建议大号用。 脚本链接 点此安装 GreasyFork 使用方法 安装好脚本后在steam商店页面点击上面的“一键移除”； 根据自己的需求获取列表； 在左侧选择要取关的鉴赏家/游戏； 点击取关或移除按钮。","link":"/posts/6a0923b1/"},{"title":"一款基于webstack的hexo主题","text":"分站内容可能或出现渲染错误或内容过时等问题，请以主站为准！分站禁止评论，评论请前往主站！ 一款基于WebStackPage的 Hexo 主题。Demo 安装 git clone https://github.com/HCLonely/hexo-theme-webstack themes/webstack 配置 favicon 网站图标 示例： favicon: /favicon.ico banner [可选]分享网站到 twitter 和 facebook 时的图片。 示例： banner: /images/webstack_banner_cn.png logo 网站 logo expanded: 侧边栏展开时左上角的 logo collapsed: 侧边栏收起时左上角的 logo dark: 顶栏为暗色时左上角的 logo, 仅 about 页面生效 示例： logo: expanded: /images/logo@2x.png collapsed: /images/logo-collapsed@2x.png dark: /images/logo_dark@2x.png flag 语言标识 icon: 语言图标，默认仅有flag-cn和flag-us, 其他图标自行寻找存放于主题目录/source/images/flags/ name: 语言名称 示例： flag: icon: flag-cn name: Chinese githubCorner 右上角的 github corner 示例： githubCorner: &apos;&lt;a href=&quot;https://github.com/HCLonely/hexo-theme-webstack&quot; class=&quot;github-corner&quot; aria-label=&quot;View source on GitHub&quot;&gt;&lt;svg width=&quot;80&quot; height=&quot;80&quot; viewBox=&quot;0 0 250 250&quot; style=&quot;fill:#151513; color:#fff; position: absolute; top: 0; border: 0; right: 0;&quot; aria-hidden=&quot;true&quot;&gt;&lt;path d=&quot;M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2&quot; fill=&quot;currentColor&quot; style=&quot;transform-origin: 130px 106px;&quot; class=&quot;octo-arm&quot;&gt;&lt;/path&gt;&lt;path d=&quot;M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z&quot; fill=&quot;currentColor&quot; class=&quot;octo-body&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;style&gt;.github-corner:hover .octo-arm{animation:octocat-wave 560ms ease-in-out}@keyframes octocat-wave{0%,100%{transform:rotate(0)}20%,60%{transform:rotate(-25deg)}40%,80%{transform:rotate(10deg)}}@media (max-width:500px){.github-corner:hover .octo-arm{animation:none}.github-corner .octo-arm{animation:octocat-wave 560ms ease-in-out}}&lt;/style&gt;&apos; since 建站年份，显示在页面底部 示例： since: 2020 menu [主要]侧边栏菜单设置 name: 分组名 icon: 分组图标 config: [主要]分组内容(详细设置查看Config)，如果有二级菜单则不需要此项！ submenu: 二级菜单，如果有二级菜单则不需要config, 此选项内容包含name, icon, config选项 示例： menu: - name: 常用工具 icon: far fa-star config: hotTools - name: 其他工具 icon: fas fa-tools submenu: - name: 开发工具 icon: fas fa-tools config: devTools - name: 我的博客 icon: fas fa-blog config: myBlog about 侧边栏的关于本站 url: 关于页面链接 name: 在侧边栏显示的文字 icon: 图标 示例： about: url: /about/ icon: far fa-heart name: 关于本站 aboutPage 关于页面设置 生成关于页面 hexo new page about 编辑source/about/index.md, 添加type: &apos;about&apos; ---title: aboutdate: 2020-06-04 18:11:54type: &apos;about&apos;--- 编辑主题配置文件的aboutPage website: 关于本站内容 head: 标题 html: 内容，支持html语法 webmaster: 关于站长内容 head: 标题 name: 站长名字 url: 链接 img: 头像 description: 描述 html: 其他内容，支持html语法 示例： aboutPage: website: head: 关于本站 html: &apos;&lt;blockquote&gt;&lt;p&gt;本站是hexo主题&lt;a href=&quot;https://github.com/HCLonely/hexo-theme-webstack&quot;&gt;hexo-theme-webstack&lt;/a&gt;的demo站。&lt;/p&gt;&lt;/blockquote&gt;&apos; webmaster: head: 关于站长 name: HCLonely url: https://blog.hclonely.com/ img: /images/logos/myblog.png description: 懒人一个 html: &apos;&lt;br /&gt;&lt;blockquote&gt;&lt;p&gt;本站是&lt;a href=&quot;https://github.com/HCLonely&quot;&gt;HCLonely&lt;/a&gt;基于&lt;a href=&quot;https://github.com/WebStackPage/WebStackPage.github.io&quot;&gt;WebStackPage&lt;/a&gt;项目做的一款&lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;主题。&lt;/p&gt;&lt;/blockquote&gt;&apos; config [主要]网站内容设置 参数 name: 网站名称 url: 网站链接 img: 网站图标 description: 网站描述 示例： - name: HCLonely Blog url: https://blog.hclonely.com/ img: /images/logos/myBlog.png description: 一个懒人的博客。 关联设置名称并添加网站 在menu和submenu中设置的config的内容为此选项的名称。 例menu： menu: - name: 常用工具 icon: far fa-star config: hotTools 则常用工具分组里的网站有以下两种添加方式： 在主题的_config.yml里添加： hotTools: - name: HCLonely Blog url: https://blog.hclonely.com/ img: /images/logos/myBlog.png description: 一个懒人的博客。 - name: Github url: https://github.com/ img: /images/logos/github.png description: 面向开源及私有软件项目的托管平台。 在站点根目录/source/_data/(没有自行创建)内新建hotTools.yml文件，文件内容如下： - name: HCLonely Blog url: https://blog.hclonely.com/ img: /images/logos/myBlog.png description: 一个懒人的博客。- name: Github url: https://github.com/ img: /images/logos/github.png description: 面向开源及私有软件项目的托管平台。 以上两种方式任选一种即可，建议使用第二种。","link":"/posts/3cd4fb34/"},{"title":"为网页添加一个一言插件","text":"分站内容可能或出现渲染错误或内容过时等问题，请以主站为准！分站禁止评论，评论请前往主站！本篇文章教大家如何给自己的网页添加一个一言插件。 什么是一言？ 简单来说，一言指的就是一句话，可以是动漫中的台词，也可以是网络上的各种小段子。 使用方法 将下方代码插入到你想让一言显示的位置即可 &lt;p id=&quot;hitokoto&quot;&gt;:D 获取中...&lt;/p&gt;&lt;!-- 以下写法，选取一种即可 --&gt;&lt;!-- 现代写法，推荐 --&gt;&lt;!-- 兼容低版本浏览器 (包括 IE)，可移除 --&gt;&lt;script src=https://cdn.jsdelivr.net/npm/bluebird@3/js/browser/bluebird.min.js&gt;&lt;/script&gt;&lt;script src=https://cdn.jsdelivr.net/npm/whatwg-fetch@2.0.3/fetch.min.js&gt;&lt;/script&gt;&lt;!--End--&gt;&lt;script&gt; fetch(&apos;https://v1.hitokoto.cn&apos;) .then(function (res){ return res.json(); }) .then(function (data) { var hitokoto = document.getElementById(&apos;hitokoto&apos;); hitokoto.innerText = data.hitokoto; }) .catch(function (err) { console.error(err); })&lt;/script&gt;&lt;!-- 老式写法，兼容性最忧 --&gt;&lt;script&gt; var xhr = new XMLHttpRequest(); xhr.open(&apos;get&apos;, &apos;https://v1.hitokoto.cn&apos;); xhr.onreadystatechange = function () { if (xhr.readyState === 4) { var data = JSON.parse(xhr.responseText); var hitokoto = document.getElementById(&apos;hitokoto&apos;); hitokoto.innerText = data.hitokoto; } } xhr.send();&lt;/script&gt;&lt;!-- 新 API 方法， 十分简洁 --&gt;&lt;script src=&quot;https://v1.hitokoto.cn/?encode=js&amp;select=%23hitokoto&quot; defer=&quot;&quot;&gt;&lt;/script&gt; 其他参数设置 请求地址 请求地址 请求方式 说明 https://v1.hitokoto.cn/ GET/POST 1、已启用 HSTS， 并已加入 HSTS Preload List 计划2、站点QPS限制：10，超过有可能会被屏蔽3、线路：大陆+海外 https://international.v1.hitokoto.cn/ GET/POST 1、已启用 HSTS， 并已加入 HSTS Preload List 计划2、站点QPS限制：25，超过有可能会被屏蔽3、线路：海外 请求方式 参数名称 类型 描述 c 可选 Cat，即类型。提交不同的参数代表不同的类别，具体： a Anime - 动画 b Comic – 漫画 c Game – 游戏 d Novel – 小说 e Myself – 原创 f Internet – 来自网络 g Other – 其他 其他不存在参数 任意类型随机取得 encode 可选 text 返回纯净文本 json 返回不进行unicode转码的json文本 js 返回指定选择器(默认.hitokoto)的同步执行函数。 其他不存在参数 返回unicode转码的json文本 charset 可选 utf-8 返回 UTF-8 编码的内容，支持与异步函数同用。 gbk 返回 GBK 编码的内容，不支持与异步函数同用。 callback 可选 回调函数 将返回的内容传参给指定的异步函数。 返回数据（默认json格式） 返回参数名称 描述 id 本条一言的id。可以链接到https://hitokoto.cn?id=[id]查看这个一言的完整信息。 hitokoto 一言正文。编码方式unicode。使用utf-8。 type 类型。请参考第三节参数的表格。 from 一言的出处。 creator 添加者。 created_at 添加时间。 注意：如果encode参数为text，那么输出的只有一言正文。 说明 插件官网：https://hitokoto.cn/ 参考说明文档：一言 API 使用说明","link":"/posts/3562b7af/"},{"title":"为网页添加一个天气插件","text":"分站内容可能或出现渲染错误或内容过时等问题，请以主站为准！分站禁止评论，评论请前往主站！本篇文章教大家如何给自己的网页添加一个天气预报插件。 使用方法 注册中国天气网帐号或登录（已有帐号） 登陆后打开天气插件网页： https://cj.weather.com.cn/plugin/pc 自定义插件样式，如下 外观 样式 悬浮窗 小视图 位置 左上角 右上角 左下角 右下角 自定义位置 距顶部 距左边 背景 随天气变化 深色 浅色 设置 语言 浏览器语言 简体中文 繁体中文 英文 单位 摄氏度 华氏度 城市 定位城市 切换城市 天气内容 天气实况 实况天气状态图标 实时温度 空气质量 实时空气质量指数 灾害预警 灾害预警 生成插件 设置名称 生成代码 重置 自定义样式完成后输入自定义插件名称，点击生成代码，会看到类似下方代码 &lt;!-- test --&gt;&lt;script type=&quot;text/javascript&quot;&gt;WIDGET = {FID: &apos;**********&apos;}&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;https://apip.weatherdt.com/float/static/js/r.js?v=1111&quot;&gt;&lt;/script&gt; 将生成的代码复制到html文件里即可 说明 插件官网： https://cj.weather.com.cn/","link":"/posts/4d6ecc07/"},{"title":"为网页添加一个社交分享插件","text":"分站内容可能或出现渲染错误或内容过时等问题，请以主站为准！分站禁止评论，评论请前往主站！本篇文章教大家如何给自己的网页添加一个社交分享插件。 使用说明 注册一个帐号或登录（已注册） 登录成功后点击上方导航栏中的Get The Code 找到如下代码复制到你的网页 &lt;!-- Go to www.addthis.com/dashboard to customize your tools --&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;//s7.addthis.com/js/300/addthis_widget.js#pubid=***************&quot;&gt;&lt;/script&gt; 点击上方导航栏中的Tools 点击右面的ADD NEW TOOL按钮 选择一个你想添加的工具，这里以关注按钮（Follow Buttons）为例 在左边选择按钮显示位置，这里以内联（Inline）为例，可以在右边查看效果 选择要添加哪些关注按钮，长按可以调整顺序 其他几个选项可以设置按钮样式、位置等，大家可以自行探索，最后点击Update Tool或Activate Tool就可以了 注意：使用“ 内联 ”时将页面拉到下面可以看到如下内容： 不要忘了将内联代码复制到要显示的位置。 说明 插件官网： https://www.addthis.com","link":"/posts/9522d51b/"},{"title":"为网页添加一个音乐播放器插件","text":"分站内容可能或出现渲染错误或内容过时等问题，请以主站为准！分站禁止评论，评论请前往主站！本篇文章教大家如何给自己的网页添加一个音乐播放器。 插件名称：APlayer 使用方法 在header标签引入css样式文件 &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.bootcss.com/aplayer/1.10.1/APlayer.min.css&quot;&gt; 在body标签内加入div标签并引入js文件 &lt;script src=&quot;https://cdn.bootcss.com/aplayer/1.10.1/APlayer.min.js&quot;&gt;&lt;/script&gt; 加载播放器 const ap = new APlayer({ container: document.getElementById(&apos;aplayer&apos;), fixed: true,//开启吸底模式 autoplay: true,//自动播放 lrcType: 1,//歌词加载方式 audio: audioArr,//歌曲列表});//更多详细参数请前往https://aplayer.js.org/#/zh-Hans/查看 引入autoPlay.js自动加载网易云音乐（可选，需jQuery支持） try { $.ajax({url: &quot;https://cdn.bootcss.com/bluebird/3.5.5/bluebird.min.js&quot;, dataType:&quot;script&quot;, cache: true, success: function() { $.ajax({url: &quot;https://cdn.bootcss.com/fetch/2.0.4/fetch.min.js&quot;, dataType:&quot;script&quot;, cache: true, success: function() { function fetch163Playlist(playlist_id) { return new Promise(function (ok, err) { fetch(&quot;https://v1.hitokoto.cn/nm/playlist/&quot; + playlist_id) .then(function (response) { return response.json(); }) .then(function (data) { var arr = []; data.playlist.tracks.map(function (value) { arr.push(value.id); }); return arr; }) .then(function (ids) { return fetch163Songs(ids); }) .then(function (data) { ok(data); }) .catch(function (e) { err(e); }); }) } function fetch163Songs(IDS) { return new Promise(function (ok, err) { var ids; switch (typeof IDS) { case &apos;number&apos;: ids = [IDS]; break; case &apos;object&apos;: if (!Array.isArray(IDS)) { err(new Error(&quot;Please enter array or number&quot;)); } ids = IDS; break; default: err(new Error(&quot;Please enter array or number&quot;)); break; } fetch(&quot;https://v1.hitokoto.cn/nm/summary/&quot; + ids.join(&quot;,&quot;) + &quot;?lyric=true&amp;common=true&quot;) .then(function (response) { return response.json(); }) .then(function (data) { var songs = []; data.songs.map(function (song) { songs.push({ name: song.name, url: song.url, artist: song.artists.join(&quot;/&quot;), album: song.album.name, pic: song.album.picture, lrc: song.lyric }); }); return songs; }) .then(function (result) { ok(result); }) .catch(function (e) { err(e); }); }); } /****加载多个网易云音乐单曲****/ fetch163Songs(songArr)//此处&quot;songArr&quot;为网易云音乐id数组 .then(function (data) { let audioArr=[]; for(let i=0;i&lt;data.length;i++){ audioArr.push({&apos;name&apos;:data[i].name,&apos;artist&apos;:data[i].artist,&apos;url&apos;:data[i].url,&apos;cover&apos;:data[i].pic,&apos;lrc&apos;:data[i].lrc.base}); } const ap = new APlayer({ container: document.getElementById(&apos;aplayer&apos;), fixed: true, autoplay: true, lrcType: 1, audio: audioArr, }); }) .catch(function (err) { console.error(&apos;网易云音乐获取失败！&apos;+err); }) /****加载网易云音乐歌单****/ fetch163Playlist(listId)//此处&quot;listId&quot;为网易云音乐歌单id .then(function (data) { let audioArr=[]; for(let i=0;i&lt;data.length;i++){ audioArr.push({&apos;name&apos;:data[i].name,&apos;artist&apos;:data[i].artist,&apos;url&apos;:data[i].url,&apos;cover&apos;:data[i].pic,&apos;lrc&apos;:data[i].lrc.base}); } const ap = new APlayer({ container: document.getElementById(&apos;aplayer&apos;), fixed: true, autoplay: true, lrcType: 1, audio: audioArr, }); }) .catch(function (err) { console.error(&apos;网易云音乐获取失败！&apos;+err); }) }}); }});} catch(err) { console.log(&quot;[Error]&quot;+err) } 说明 插件官网：http://aplayer.js.org 插件GitHub：https://github.com/MoePlayer/APlayer 中文说明文档： https://aplayer.js.org/#/zh-Hans/ CDN支持：BootCDN 网易云音乐API： https://github.com/a632079/teng-koa","link":"/posts/a6b0234c/"},{"title":"为网页添加字体闪烁（变色）特效","text":"分站内容可能或出现渲染错误或内容过时等问题，请以主站为准！分站禁止评论，评论请前往主站！本篇文章教大家如何给自己的网页添加一个字体闪烁（变色）特效。 添加步骤 给要添加特效的元素添加class: magic-color 将以下代码复制到元素后面（多个元素则放到最后一个元素后面） &lt;script&gt;function magicColor(mode,t){ t=t||10; let elem=document.getElementsByClassName(&quot;magic-color&quot;); if(!elem){ setTimeout(function(){ magicColor(mode,t-1); },400); return; } if(window.mcHandler==undefined){ window.mcHandler={elements:[]}; window.mcHandler.colorIndex=0; window.mcHandler.run=function(mode){ let color=mode==&quot;random&quot;?(&quot;rgb(&quot;+Math.floor(Math.random()*256)+&quot;,&quot;+Math.floor(Math.random()*256)+&quot;,&quot;+Math.floor(Math.random()*256)+&quot;,1)&quot;):[&quot;#CC0000&quot;,&quot;#9999CC&quot;,&quot;#CC3366&quot;,&quot;#669999&quot;,&quot;#FFCC00&quot;,&quot;#00CCCC&quot;,&quot;#CC00CC&quot;][(window.mcHandler.colorIndex++)%7]; for(var i=0,L=window.mcHandler.elements.length;i&lt;L;i++)window.mcHandler.elements[i].style.color=color; } } window.mcHandler.elements=elem; if(window.mcHandler.timer==undefined){ window.mcHandler.timer=setInterval(()=&gt;{window.mcHandler.run(mode)},500); }}magicColor(random);//random为随机颜色，否则为固定颜色随机；上方“闪烁（变色）”字样为固定颜色随机&lt;/script&gt;","link":"/posts/8f55ce4c/"},{"title":"使用cron-job解决Valine-admin因流控原因自动唤醒失败的问题","text":"分站内容可能或出现渲染错误或内容过时等问题，请以主站为准！分站禁止评论，评论请前往主站！Valine-admin由于Leancloud流控原因，自动唤醒任务可能会失败，详情：https://forum.leancloud.cn/t/topic/22595 所以这里介绍一个使用第三方计划任务网站进行定时唤醒Valine-admin的方法。 注册cron-job帐号 注册地址：https://cron-job.org/en/signup/ 注册时的时区请选择Asia/Shanghai 添加一个计划任务 登陆之后依次点击Members,cronjobs,Create cronjob Title, Address Title可以随便填一个 Address填写你的云引擎环境变量的ADMIN_URL，也就是Leancloud的Web 主机域名。如果你用的我Valine添加博主标签及评论微信、QQ通知文章里的最新版的仓库，还需要在后面加上/start，当然也可以不加，加上会有唤醒日志。 Schedule 选择User-defined进行自定义设置 Days of month: 全选 Days of week: 全选 Months: 全选 Hours: 你需要在哪个时间段唤醒就选择什么 Minutes: 选择0,20,40 按住Ctrl可多选 Notifications 可以不用修改，也可以根据自己的需要修改 Common 勾选Save responses, 保存唤醒日志 点击Create cronjob","link":"/posts/ac04080d/"},{"title":"初学JS时搞的一些Tampermonkey脚本","text":"分站内容可能或出现渲染错误或内容过时等问题，请以主站为准！分站禁止评论，评论请前往主站！ 介绍一些我写的不那么大众的Tampermonkey脚本 Steam Redeem Sub 功能 在steam账户页面激活SUB（支持改区） 支持一键激活https://steamdb.info/freepackages/页面的SUB 脚本链接 点此安装 GreasyFork Redeem itch.io 功能 检测 itch.io key链接并激活 自动激活价格为0.00的itch.io游戏 提取当前页面的所有itch游戏链接并尝试激活（仅支持其乐社区） 脚本链接 点此安装 GreasyFork Alienwarearena Daily Quest Helper 功能 外星人论坛自动投票20次(此任务已废弃)。 自动做外星人论坛&quot;Daily Quest&quot;任务（更换头像框、更换徽章、添加视频、评论、分享、阅读新闻等，周末的任务需要有人发了含有答案链接的帖子才能完成）。 脚本链接 点此安装 GreasyFork 使用方法 点击任务名即可 bilibili直播自定义皮肤背景 功能 自定义bilibili直播的皮肤和背景，仅自己可见！ 脚本链接 点此安装 GreayFork 使用方法 自定义背景 打开bilibili任一直播间； 点击“更换背景”； 选择要更换的背景类型，有“纯色背景”、“自定义背景”和默认的6中背景供你选择； 纯色背景：输入颜色代码(?)点击确认就可以将直播间背景改为你选定的颜色； 自定义背景：输入背景图片链接点击确认就可以将直播间背景改为你选定的图片； 点击保存。 自定义皮肤 打开bilibili任一直播间； 点击“更换皮肤”； 选择要更换的皮肤类型或修改下面的参数自定义皮肤； 点击保存。 steam链接已删除？ 功能 重新显示steam社区显示{链接已删除}的链接 脚本链接 点此安装 GreasyFork Steam便捷加入购物车 功能 可以在Steam商店页面直接将游戏加入购物车，不会跳转到购物车页面 脚本链接 点此安装 GreasyFork","link":"/posts/578f9be7/"},{"title":"实用bat脚本","text":"分站内容可能或出现渲染错误或内容过时等问题，请以主站为准！分站禁止评论，评论请前往主站！ 将所有子文件夹里的文件上移一层 覆盖同名文件 @echo off(for /f &quot;delims=&quot; %%a in (&apos;dir /b /s /ad&apos;) do ( move /y &quot;%%a\\*.*&quot; &quot;%%a\\..&quot;&amp;&amp;rd %%a))&gt;nul 2&gt;nulfor /f &quot;delims=&quot; %%i in (&apos;dir /ad /b /s^|sort /r&apos;) do rd /q &quot;%%i&quot; 2&gt;nulpause 选择是否覆盖同名文件 @echo off(for /f &quot;delims=&quot; %%a in (&apos;dir /b /s /ad&apos;) do ( move /-y &quot;%%a\\*.*&quot; &quot;%%a\\..&quot;&amp;&amp;rd %%a))&gt;nul 2&gt;nulfor /f &quot;delims=&quot; %%i in (&apos;dir /ad /b /s^|sort /r&apos;) do rd /q &quot;%%i&quot; 2&gt;nulpause 将当前文件夹里子文件夹里的文件移动到all文件夹 for /f &quot;delims=&quot; %%p in (&apos;dir /b/ad&apos;) do move %%p\\*.* all\\pause","link":"/posts/d92292e2/"},{"title":"给你的网页添加一个moc3格式的Live2d模型","text":"分站内容可能或出现渲染错误或内容过时等问题，请以主站为准！分站禁止评论，评论请前往主站！ 前言 之前搞网页Live2d模型的时候在网上找了很多文章，但大部分都只支持moc格式的模型，不支持moc3格式的模型。 如果你的模型是moc格式，请参考给网页添加一个Live2D看板娘（前端） 最近在Github上看到这个项目AzurLaneL2DViewer, 根据这个项目做成了JS库。 使用前请查看live2dcubismcore的许可协议 使用方法 在&lt;body&gt;标签内添加如下内容： &lt;!-- 用于存放Live2d的元素，可自定义 --&gt;&lt;div class=&quot;Canvas&quot; style=&quot;position: fixed; right: 10px; bottom: 10px;z-index: 99999999&quot; id=&quot;L2dCanvas&quot;&gt;&lt;/div&gt; 在&lt;/body&gt;之前添加以下内容： &lt;!------ 位置可自定义 ------&gt;&lt;div class=&quot;Canvas&quot; style=&quot;position: fixed; right: 10px; bottom: 10px;z-index: 99999999&quot; id=&quot;L2dCanvas&quot;&gt;&lt;/div&gt;&lt;!------ 依赖 JS ------&gt;&lt;!---- 可选 ----&gt;&lt;!-- 兼容低版本浏览器 --&gt;&lt;script src=&quot;https://cdn.jsdelivr.net/npm/promise-polyfill@8/dist/polyfill.min.js&quot;&gt; &lt;/script&gt;&lt;!-- 音频播放兼容 --&gt;&lt;script src=&quot;https://cdn.jsdelivr.net/npm/howler@2.1.3/dist/howler.min.js&quot;&gt;&lt;/script&gt;&lt;!---- 必需 ----&gt;&lt;script src=&quot;https://cubism.live2d.com/sdk-web/cubismcore/live2dcubismcore.min.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;https://cdn.jsdelivr.net/npm/pixi.js@4.6.1/dist/pixi.min.js&quot;&gt;&lt;/script&gt;&lt;!-- live2dv3.js --&gt;&lt;script src=&quot;https://cdn.jsdelivr.net/npm/live2dv3@1.2.2/live2dv3.min.js&quot;&gt;&lt;/script&gt;&lt;!------ 加载Live2d模型 ------&gt;&lt;script&gt;window.onload = () =&gt; { new l2dViewer({ el: document.getElementById(&apos;L2dCanvas&apos;), // 要添加Live2d的元素 basePath: &apos;https://cdn.jsdelivr.net/gh/HCLonely/Live2dV3/assets&apos;, // 模型根目录 modelName: &apos;biaoqiang_3&apos;, // 模型名称 sounds: [ // 触摸播放声音 &apos;sounds/demo.mp3&apos;, // 相对路径是相对于模型文件夹 &apos;https://cdn.jsdelivr.net/npm/live2dv3@latest/assets/biaoqiang_3/sounds/demo.mp3&apos; // 也可以是网址 ] })}&lt;/script&gt; 参数 参数 类型 描述 默认 el [必需] DOM 对象或 jQuery 对象 要挂载Live2d模型的元素, 支持DOM选择器和jQuery选择器，例：document.getElementById(&apos;L2dCanvas&apos;)或document.querySelector(&apos;#L2dCanvas&apos;)或$(&apos;#L2dCanvas&apos;) null basePath [必需] String 模型根目录 null modelName [必需] String 模型目录 null width [可选] Number Canvas宽度，单位: px 500 height [可选] Number Canvas高度，单位: px 300 sizeLimit [可选] Boolean 当窗口大小小于设置的宽或高时不加载模型 false mobileLimit [可选] Boolean 移动端不加载模型 false sounds [可选] Array 触摸播放声音， 留空则不播放 null 方法 loadModel(modelName?) 重新加载/更换模型 Demo https://live2dv3demo.hclonely.com/","link":"/posts/8a7f7919/"},{"title":"给网页添加社会主义核心价值观鼠标点击特效","text":"分站内容可能或出现渲染错误或内容过时等问题，请以主站为准！分站禁止评论，评论请前往主站！本篇文章教大家如何给自己的网页添加一个像本页面一样鼠标点击显示富强,民主, 文明, 和谐,自由, 平等, 公正,法治, 爱国, 敬业,诚信, 友善的特效。 原生JS实现代码 window.onload=()=&gt;{ let i=0;//定义获取词语下标 let body=document.getElementsByTagName(&quot;body&quot;)[0]; body.onclick=function(e){//点击body时触发事件 const a=[&quot;富强&quot;,&quot;民主&quot;, &quot;文明&quot;, &quot;和谐&quot;,&quot;自由&quot;, &quot;平等&quot;, &quot;公正&quot;,&quot;法治&quot;, &quot;爱国&quot;, &quot;敬业&quot;,&quot;诚信&quot;, &quot;友善&quot;];//需要显示的词语 let span=document.createElement(&quot;span&quot;);//创建span标签 span.innerText=a[(i++)%a.length];//设置词语给span标签 let x = e.pageX;//获取x指针坐标 let y = e.pageY;//获取y指针坐标 span.style.cssText=&quot;z-index:999999999999999999999999;top:&quot;+(y - 20)+&quot;px;left:&quot;+x+&quot;px;position:absolute;font-weight:bold;color:#ff6651;&quot;;//在鼠标的指针的位置给span标签添加css样式 body.appendChild(span);//在body添加这个span标签 animate(span, {&quot;top&quot; : y - 180,&quot;opacity&quot; : 0}, 15, 0.01, function(){ body.removeChild(span);//时间到了自动删除 }) } //animate函数执行 CSS 属性集的自定义动画。 function animate(obj, json, interval, sp, fn) { clearInterval(obj.timer); function getStyle(obj, arr) { if(obj.currentStyle){ return obj.currentStyle[arr];//针对ie } else { return document.defaultView.getComputedStyle(obj, null)[arr].replace(/px/g,&quot;&quot;); } } obj.timer = setInterval(function(){ var flag = true; for(var arr in json) { var icur = 0; if(arr == &quot;opacity&quot;) { icur = Math.round(parseFloat(getStyle(obj, arr))*100); } else { icur = parseInt(getStyle(obj, arr)); } var speed = (json[arr] - icur) * sp; speed = speed &gt; 0 ? Math.ceil(speed): Math.floor(speed); if(icur != json[arr]){ flag = false; } if(arr == &quot;opacity&quot;){ obj.style.filter = &quot;alpha(opacity : &apos;+(icur + speed)+&apos; )&quot;; obj.style.opacity = (icur + speed)/100; }else { obj.style[arr] = icur + speed + &quot;px&quot;; } } if(flag){ clearInterval(obj.timer); if(fn){ fn(); } } },interval); }} jQuery实现代码 jQuery(document).ready(function($) { let i=0;//定义获取词语下标 $(&quot;body&quot;).click(function(e) {//点击body时触发事件 let a = [&quot;富强&quot;,&quot;民主&quot;, &quot;文明&quot;, &quot;和谐&quot;,&quot;自由&quot;, &quot;平等&quot;, &quot;公正&quot;,&quot;法治&quot;, &quot;爱国&quot;, &quot;敬业&quot;,&quot;诚信&quot;, &quot;友善&quot;];//需要显示的词语 let $i = $(&quot;&lt;span/&gt;&quot;).text(a[(i++)%a.length]);//设置词语给span标签 let x = e.pageX; let y = e.pageY;//获取x和y的指针坐标 $i.css({&quot;z-index&quot; : 9999999999999999999, &quot;top&quot; : y - 20, &quot;left&quot; : x, &quot;position&quot; : &quot;absolute&quot;, &quot;font-weight&quot; : &quot;bold&quot;, &quot;color&quot; : &quot;#ff6651&quot; });//在鼠标的指针的位置给$i定义的span标签添加css样式 $(&quot;body&quot;).append($i);//在body添加这个标签 /*nimate() 方法执行 CSS 属性集的自定义动画。 *该方法通过CSS样式将元素从一个状态改变为另一个状态。CSS属性值是逐渐改变的，这样就可以创建动画效果。 *详情请看http://www.w3school.com.cn/jquery/effect_animate.asp */ $i.animate({ &quot;top&quot; : y - 180,//将原来的位置向上移动180 &quot;opacity&quot; : 0 //1500动画的速度 }, 1500, ()=&gt;{ $i.remove();//时间到了自动删除 }); });}); 说明 参考文档： HTML+CSS+JS实现鼠标点击特效富强\\民主\\文明方法 原生js实现jquery函数animate()动画效果的简单实例","link":"/posts/dd3e8958/"},{"title":"AuTo Redeem Steamkey脚本","text":"分站内容可能或出现渲染错误或内容过时等问题，请以主站为准！分站禁止评论，评论请前往主站！ 功能 复制网页中的Steamkey后自动激活。 脚本链接 点此安装 GreasyFork 功能介绍 首次使用3.0+版本请先设置： 点击Tampermonkey插件图标 找到AuTo Redeemer Steamkey下面的&quot;设置&quot; 功能： 一键激活页面内所有key 第一次点击key会给key添加超链接，再次点击就可以激活 复制key询问是否激活 选中key显示steam图标，点击图标激活 支持多key批量激活 若一次激活的Key的数量超过9个则会自动分批激活（等待20秒） 激活完成后显示未使用key 支持ASF激活(3.0新增) steam账户页面和steam激活页面支持更换国家/地区 steam激活页面增加激活sub,激活礼物卡或钱包充值码(测试)功能 https://steamdb.info/freepackages/网站点击代码区域后自动复制并跳转到steam账户许可页面并激活，开启ASF功能后使用!addlicense功能激活 Tampermonkey菜单 设置 全局设置 新标签页激活:激活key/sub时打开激活页面激活(同2.X版本)，默认关闭 开启复制捕捉:复制的内容含有AAAAA-BBBBB-CCCCC格式的内容是询问是否激活，默认开启 开启选中捕捉:选中的文本中含有AAAAA-BBBBB-CCCCC格式的内容是在鼠标光标右下显示steam图标，点击图标即激活，默认开启 开启点击捕捉:点击的网页中AAAAA-BBBBB-CCCCC格式的内容是会给次内用添加一个超链接，再次点击即激活，默认开启 ASF设置 ASF IPC协议:http或https,默认http ASF IPC地址:如果是本机运行ASF则是127.0.0.1,如果是服务器运行则为服务器ip或域名,默认127.0.0.1 ASF IPC端口:默认1242 ASF IPC密码:你设置的ASF IPC密码,默认为空 ASF Bot名字:用来激活key的机器人名字,留空则按你ASF设置的激活顺序激活,对单账号用户没影响,可留空,默认为空 开启ASF激活:开启后全局设置中的新标签页激活功能无效,开启后激活key/sub时使用ASF激活，需配置好以上ASF配置 ASF连接测试 需开启ASF激活功能并配置好ASF,尝试向ASF发送!stats命令，如果返回内存用量则为连接成功 执行ASF命令 可远程执行ASF命令 提供ASF命令查询功能 查看上次激活记录 可以查看最近一次激活key的记录 key格式转换 可以将key转换成一下两种格式： key key key key,key,key","link":"/posts/71381355/"},{"title":"给网页添加一个Live2D看板娘（前端）","text":"分站内容可能或出现渲染错误或内容过时等问题，请以主站为准！分站禁止评论，评论请前往主站！ 本篇文章教大家如何给自己的网页添加一个类似右下角的Live2D看板娘。 如果你的模型是moc3格式的，请参考给你的网页添加一个moc3格式的Live2d模型 使用插件 如果你的博客使用了WordPress,Typecho,Emlog或Z-Blog等框架，可以直接下载大佬们的插件使用 WordPress 小白-白酱的插件（22&amp;33模型）： https://moedog.org/946.html DaiDR酱的插件（Pio模型）： https://daidr.me/archives/code-176.html Typecho 泽泽酱的插件（22&amp;33模型）： https://qqdie.com/archives/l2d233.html 保罗酱的插件（Pio模型）： https://paugram.com/coding/add-poster-girl-with-plugin.html Emlog 广树酱的插件（伊斯特瓦尔模型）： https://www.wikimoe.com/?post=75 Z-Blog FGHRSH酱的插件（Pio&amp;Tia模型）： https://www.fghrsh.net/post/123.html 不使用插件 如果你的网站没有使用有现成插件的框架，可以直接将代码写入html 依赖类库 JQuery (waifu-tips.js) JQuery UI (仅实现 拖拽效果 需要) 使用方法 下载源码 GitHub官方下载 备用下载 将assets文件夹解压到网站目录（这里以解压到根目录为例） 引入css及js文件 autoload.js 引入 在 &quot;&lt;/body&gt;&quot; 前引入 autoload.js 常规方式引入 在 &quot;&lt;/head&gt;&quot; 前引入 waifu.css 样式表 在 &quot;&lt;/body&gt;&quot; 前引入 waifu-tips.js 和 live2d.js 在 &quot;&lt;/body&gt;&quot; 前插入 初始化 JS，可在 初始化前 设置参数 &lt;html&gt;&lt;head&gt; · · · · · · &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;https://www.example.com/path/to/waifu.css&quot;/&gt;&lt;/head&gt;&lt;body&gt; · · · · · · &lt;div class=&quot;waifu&quot;&gt; &lt;div class=&quot;waifu-tips&quot;&gt;&lt;/div&gt; &lt;canvas id=&quot;live2d&quot; class=&quot;live2d&quot;&gt;&lt;/canvas&gt; &lt;div class=&quot;waifu-tool&quot;&gt; &lt;span class=&quot;fui-home&quot;&gt;&lt;/span&gt; &lt;span class=&quot;fui-chat&quot;&gt;&lt;/span&gt; &lt;span class=&quot;fui-eye&quot;&gt;&lt;/span&gt; &lt;span class=&quot;fui-user&quot;&gt;&lt;/span&gt; &lt;span class=&quot;fui-photo&quot;&gt;&lt;/span&gt; &lt;span class=&quot;fui-info-circle&quot;&gt;&lt;/span&gt; &lt;span class=&quot;fui-cross&quot;&gt;&lt;/span&gt; &lt;/div&gt; &lt;/div&gt; &lt;script src=&quot;path/to/waifu-tips.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;path/to/live2d.js&quot;&gt;&lt;/script&gt; &lt;script type=&quot;text/javascript&quot;&gt; live2d_settings[&apos;modelId&apos;] = 1; live2d_settings[&apos;modelTexturesId&apos;] = 87; initModel(&quot;https://www.example.com/path/to/waifu-tips.json&quot;) &lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 定制属于你的看板娘 修改 waifu-tips.js 顶部的设置参数(或初始化前设置) 修改 waifu-tips.json，定制看板娘提示语，打造专属看板娘 设置参数 Tips： waifu-tips.js 已自带默认参数，如无特殊要求可跳过 后端接口 live2d_settings[&apos;modelAPI&apos;] 看板娘 API 地址，默认值 &apos;//live2d.fghrsh.net/api/&apos; live2d_settings[&apos;tipsMessage&apos;] 提示语读取路径，默认值 &apos;waifu-tips.json&apos; (一般在 initModel 时指定) live2d_settings[&apos;hitokotoAPI&apos;] 一言 API 接口，可选 &apos;lwl12.com&apos;，&apos;hitokoto.cn&apos;，&apos;jinrishici.com&apos; (古诗词) 默认模型 live2d_settings[&apos;modelId&apos;] 默认模型(分组) ID，可在 Demo 页 [F12] 呼出 控制台(Console) 找到 live2d_settings[&apos;modelTexturesId&apos;] 默认材质(模型) ID，可在 Demo 页 [F12] 呼出 控制台(Console) 找到 工具栏设置 live2d_settings[&apos;showToolMenu&apos;]， 显示工具栏， true | false live2d_settings[&apos;canCloseLive2d&apos;]， 关闭看板娘 按钮，true | false live2d_settings[&apos;canSwitchModel&apos;]， 切换模型 按钮， true | false live2d_settings[&apos;canSwitchTextures&apos;]， 切换材质 按钮， true | false live2d_settings[&apos;canSwitchHitokoto&apos;]， 切换一言 按钮， true | false live2d_settings[&apos;canTakeScreenshot&apos;]， 看板娘截图 按钮，true | false live2d_settings[&apos;canTurnToHomePage&apos;]， 返回首页 按钮， true | false live2d_settings[&apos;canTurnToAboutPage&apos;]，跳转关于页 按钮，true | false 模型切换模式 live2d_settings[&apos;modelStorage&apos;]，记录 ID (刷新后恢复)，true | false live2d_settings[&apos;modelRandMode&apos;]，模型切换，可选 &apos;rand&apos; (随机) | &apos;switch&apos; (顺序) live2d_settings[&apos;modelTexturesRandMode&apos;]，材质切换，可选 &apos;rand&apos; | &apos;switch&apos; 提示消息选项 live2d_settings[&apos;showHitokoto&apos;]，空闲时一言，true | false live2d_settings[&apos;showF12Status&apos;]，控制台显示加载状态，true | false live2d_settings[&apos;showF12Message&apos;]，提示消息输出到控制台，true | false live2d_settings[&apos;showF12OpenMsg&apos;]，控制台被打开触发提醒，true | false live2d_settings[&apos;showCopyMessage&apos;]，内容被复制触发提醒，true | false live2d_settings[&apos;showWelcomeMessage&apos;]，进入面页时显示欢迎语，true | false 看板娘样式设置 live2d_settings[&apos;waifuSize&apos;]，看板娘大小，例如 &apos;280x250&apos;，&apos;600x535&apos; live2d_settings[&apos;waifuTipsSize&apos;]，提示框大小，例如 &apos;250x70&apos;，&apos;570x150&apos; live2d_settings[&apos;waifuFontSize&apos;]，提示框字体，例如 &apos;12px&apos;，&apos;30px&apos; live2d_settings[&apos;waifuToolFont&apos;]，工具栏字体，例如 &apos;14px&apos;，&apos;36px&apos; live2d_settings[&apos;waifuToolLine&apos;]，工具栏行高，例如 &apos;20px&apos;，&apos;36px&apos; live2d_settings[&apos;waifuToolTop&apos;]，工具栏顶部边距，例如 &apos;0px&apos;，&apos;-60px&apos; live2d_settings[&apos;waifuMinWidth&apos;] 面页小于 指定宽度 隐藏看板娘，例如 &apos;disable&apos; (停用)，&apos;768px&apos; live2d_settings[&apos;waifuEdgeSide&apos;] 看板娘贴边方向，例如 &apos;left:0&apos; (靠左 0px)，&apos;right:30&apos; (靠右 30px) live2d_settings[&apos;waifuDraggable&apos;] 拖拽样式，可选 &apos;disable&apos; (禁用)，&apos;axis-x&apos; (只能水平拖拽)，&apos;unlimited&apos; (自由拖拽) live2d_settings[&apos;waifuDraggableRevert&apos;]，松开鼠标还原拖拽位置，true | false 其他杂项设置 live2d_settings[&apos;l2dVersion&apos;]，当前版本 (无需修改) live2d_settings[&apos;l2dVerDate&apos;]，更新日期 (无需修改) live2d_settings[&apos;homePageUrl&apos;]，首页地址，可选 &apos;auto&apos; (自动)，&apos;{URL 网址}&apos; live2d_settings[&apos;aboutPageUrl&apos;]，关于页地址，&apos;{URL 网址}&apos; live2d_settings[&apos;screenshotCaptureName&apos;]，看板娘截图文件名，例如 &apos;live2d.png&apos; 定制提示语 Tips： waifu-tips.json 已自带默认提示语，如无特殊要求可跳过 &quot;waifu&quot; 系统提示 &quot;console_open_msg&quot; 控制台被打开提醒（支持多句随机） &quot;copy_message&quot; 内容被复制触发提醒（支持多句随机） &quot;screenshot_message&quot; 看板娘截图提示语（支持多句随机） &quot;hidden_message&quot; 看板娘隐藏提示语（支持多句随机） &quot;load_rand_textures&quot; 随机材质提示语（暂不支持多句） &quot;hour_tips&quot; 时间段欢迎语（支持多句随机） &quot;referrer_message&quot; 请求来源欢迎语（不支持多句） &quot;referrer_hostname&quot; 请求来源自定义名称（根据 host，支持多句随机） &quot;model_message&quot; 模型切换欢迎语（根据模型 ID，支持多句随机） &quot;hitokoto_api_message&quot;，一言 API 输出模板（不支持多句随机） &quot;mouseover&quot; 鼠标触发提示（根据 CSS 选择器，支持多句随机） &quot;click&quot; 鼠标点击触发提示（根据 CSS 选择器，支持多句随机） &quot;seasons&quot; 节日提示（日期段，支持多句随机） 使用浏览器插件在任何网页上都显示 安装插件： https://www.tampermonkey.net/ 安装脚本： live2D看板娘 说明 GitHub源码： https://github.com/fghrsh/live2d_demo 参考文档： Live2D demo 网页添加 Live2D 看板娘 给博客添加能动的看板娘(Live2D)-将其添加到网页上吧","link":"/posts/e1f9f17c/"}],"tags":[{"name":"Aria2","slug":"Aria2","link":"/tags/Aria2/"},{"name":"WebUI","slug":"WebUI","link":"/tags/WebUI/"},{"name":"图形界面","slug":"图形界面","link":"/tags/%E5%9B%BE%E5%BD%A2%E7%95%8C%E9%9D%A2/"},{"name":"Chrome","slug":"Chrome","link":"/tags/Chrome/"},{"name":"插件","slug":"插件","link":"/tags/%E6%8F%92%E4%BB%B6/"},{"name":"浏览器","slug":"浏览器","link":"/tags/%E6%B5%8F%E8%A7%88%E5%99%A8/"},{"name":"Hexo","slug":"Hexo","link":"/tags/Hexo/"},{"name":"steam","slug":"steam","link":"/tags/steam/"},{"name":"game","slug":"game","link":"/tags/game/"},{"name":"游戏","slug":"游戏","link":"/tags/%E6%B8%B8%E6%88%8F/"},{"name":"bilibili","slug":"bilibili","link":"/tags/bilibili/"},{"name":"bangumi","slug":"bangumi","link":"/tags/bangumi/"},{"name":"哔哩哔哩","slug":"哔哩哔哩","link":"/tags/%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9/"},{"name":"美化","slug":"美化","link":"/tags/%E7%BE%8E%E5%8C%96/"},{"name":"小部件","slug":"小部件","link":"/tags/%E5%B0%8F%E9%83%A8%E4%BB%B6/"},{"name":"日历","slug":"日历","link":"/tags/%E6%97%A5%E5%8E%86/"},{"name":"访客地图","slug":"访客地图","link":"/tags/%E8%AE%BF%E5%AE%A2%E5%9C%B0%E5%9B%BE/"},{"name":"pixiv","slug":"pixiv","link":"/tags/pixiv/"},{"name":"投票","slug":"投票","link":"/tags/%E6%8A%95%E7%A5%A8/"},{"name":"ip","slug":"ip","link":"/tags/ip/"},{"name":"图片签名档","slug":"图片签名档","link":"/tags/%E5%9B%BE%E7%89%87%E7%AD%BE%E5%90%8D%E6%A1%A3/"},{"name":"签名档","slug":"签名档","link":"/tags/%E7%AD%BE%E5%90%8D%E6%A1%A3/"},{"name":"脚本","slug":"脚本","link":"/tags/%E8%84%9A%E6%9C%AC/"},{"name":"key","slug":"key","link":"/tags/key/"},{"name":"自动任务","slug":"自动任务","link":"/tags/%E8%87%AA%E5%8A%A8%E4%BB%BB%E5%8A%A1/"},{"name":"steam激活码","slug":"steam激活码","link":"/tags/steam%E6%BF%80%E6%B4%BB%E7%A0%81/"},{"name":"Linux","slug":"Linux","link":"/tags/Linux/"},{"name":"ownCloud","slug":"ownCloud","link":"/tags/ownCloud/"},{"name":"硬盘","slug":"硬盘","link":"/tags/%E7%A1%AC%E7%9B%98/"},{"name":"NodeJs","slug":"NodeJs","link":"/tags/NodeJs/"},{"name":"module","slug":"module","link":"/tags/module/"},{"name":"JavaScript","slug":"JavaScript","link":"/tags/JavaScript/"},{"name":"Cloud Studio","slug":"Cloud-Studio","link":"/tags/Cloud-Studio/"},{"name":"Valine","slug":"Valine","link":"/tags/Valine/"},{"name":"aria2","slug":"aria2","link":"/tags/aria2/"},{"name":"webui","slug":"webui","link":"/tags/webui/"},{"name":"下载软件","slug":"下载软件","link":"/tags/%E4%B8%8B%E8%BD%BD%E8%BD%AF%E4%BB%B6/"},{"name":"online","slug":"online","link":"/tags/online/"},{"name":"server","slug":"server","link":"/tags/server/"},{"name":"tag","slug":"tag","link":"/tags/tag/"},{"name":"live2d","slug":"live2d","link":"/tags/live2d/"},{"name":"看板娘","slug":"看板娘","link":"/tags/%E7%9C%8B%E6%9D%BF%E5%A8%98/"},{"name":"主题","slug":"主题","link":"/tags/%E4%B8%BB%E9%A2%98/"},{"name":"一言","slug":"一言","link":"/tags/%E4%B8%80%E8%A8%80/"},{"name":"天气","slug":"天气","link":"/tags/%E5%A4%A9%E6%B0%94/"},{"name":"网页","slug":"网页","link":"/tags/%E7%BD%91%E9%A1%B5/"},{"name":"addThis","slug":"addThis","link":"/tags/addThis/"},{"name":"分享","slug":"分享","link":"/tags/%E5%88%86%E4%BA%AB/"},{"name":"社交","slug":"社交","link":"/tags/%E7%A4%BE%E4%BA%A4/"},{"name":"APlayer","slug":"APlayer","link":"/tags/APlayer/"},{"name":"音乐播放器","slug":"音乐播放器","link":"/tags/%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8/"},{"name":"网页特效","slug":"网页特效","link":"/tags/%E7%BD%91%E9%A1%B5%E7%89%B9%E6%95%88/"},{"name":"bat","slug":"bat","link":"/tags/bat/"},{"name":"鼠标特效","slug":"鼠标特效","link":"/tags/%E9%BC%A0%E6%A0%87%E7%89%B9%E6%95%88/"}],"categories":[{"name":"浏览器插件","slug":"浏览器插件","link":"/categories/%E6%B5%8F%E8%A7%88%E5%99%A8%E6%8F%92%E4%BB%B6/"},{"name":"Hexo","slug":"Hexo","link":"/categories/Hexo/"},{"name":"网页制作","slug":"网页制作","link":"/categories/%E7%BD%91%E9%A1%B5%E5%88%B6%E4%BD%9C/"},{"name":"JavaScript","slug":"JavaScript","link":"/categories/JavaScript/"},{"name":"插件","slug":"Hexo/插件","link":"/categories/Hexo/%E6%8F%92%E4%BB%B6/"},{"name":"Linux","slug":"Linux","link":"/categories/Linux/"},{"name":"DIY","slug":"Hexo/DIY","link":"/categories/Hexo/DIY/"},{"name":"Valine","slug":"Hexo/Valine","link":"/categories/Hexo/Valine/"},{"name":"Windows","slug":"Windows","link":"/categories/Windows/"},{"name":"Tampermonkey脚本","slug":"JavaScript/Tampermonkey脚本","link":"/categories/JavaScript/Tampermonkey%E8%84%9A%E6%9C%AC/"},{"name":"主题","slug":"Hexo/主题","link":"/categories/Hexo/%E4%B8%BB%E9%A2%98/"},{"name":"Valine","slug":"Valine","link":"/categories/Valine/"},{"name":"NodeJs","slug":"JavaScript/NodeJs","link":"/categories/JavaScript/NodeJs/"},{"name":"软件","slug":"Windows/软件","link":"/categories/Windows/%E8%BD%AF%E4%BB%B6/"}]}